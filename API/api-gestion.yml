openapi: 3.0.0
info:
  title: API portal de gestion
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000/
    description: Developments
paths:
  # incidencias
  /incidencias:
    # pedimos una lista de las incidencias
    get:
      summary: Obtiene una lista de incidencias
      tags: 
      - Incidencias
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con incidencias:
                  value: [
                          {
                            "incidenciaId": 1,
                            "estación": "VG1",
                            "direccion": "Av.Victor Balaguer 2",
                            "fecha_averia": "18/04/2022",
                            "estado": false,
                            "descripción": "El cargador de la planta 2 m plaza 1 no funciona"
                          },
                          {
                            "incidenciaId": 2,
                            "estación": "VG2",
                            "direccion": "Av.Victor Balaguer 2",
                            "fecha_averia": "18/04/2022 ",
                            "estado": false,
                            "descripcion": "El cargador de la planta 2 m plaza 1 no funciona"
                          }
                        ]
                  
                Sin incidencias:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authorized."}
    # mandamos/resolvemos 1 incidencia]
    post:
        summary: Inserta una nueva incidencia
        tags:
        - Incidencias
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - estacion
                  - direccion
                  - fecha_averia
                  - descripcion
                properties:
                  estacion:
                    type: string
                  direccion:
                    type: string
                  fecha_averia:
                    type: string
                  descripcion:
                    type: string
                example:
                  estacion: VG1
                  direccion: "Av.Victor Balaguer 2"
                  fecha_averia: "18/04/2022"
                  descripcion: "El cargador de la planta 2 m plaza 1 no funciona"
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter incidencia:
                    value:  >-
                        {
                          "estacion": "VG1",
                          "direccion": "Av.Victor Balaguer 2",
                          "fecha_averia": "18/04/2022",
                          "estado": "true",
                          "descripcion": "El cargador de la planta 2 m plaza 1 funciona"
                        }
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter incidencia:
                    value: >- 
                      {"error": "Malformed request syntax."}
                  
  /incidencias/byname/{estacion}:
    # pedimos una lista de incidencias por una estacion dada
    get:
      summary: Obtiene una lista de incidencias para una estacion dada
      tags: 
      - Incidencias
      parameters:
        - in: path
          name: estacion
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de incidencias
          content:
            application/json:
              examples:
                Con incidencias:
                  value: >-
                        [
                          {
                            "incidenciaId": 1,
                            "estación": "VG1",
                            "direccion": "Av.Victor Balaguer 2",
                            "fecha_averia": "18/04/2022 ",
                            "estado": false,
                            "descripción": "El cargador de la planta 2 m plaza 1 no funciona"
                          },
                          {
                            "incidenciaId": 2,
                            "estacion": "VG2",
                            "direccion": "Av.Victor Balaguer 2",
                            "fecha_averia": "18/04/2022 ",
                            "estado": false,
                            "descripcion": "El cargador de la planta 2 m plaza 1 no funciona"
                          }
                        ]
                Sin incidencias:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >- 
                    {"error": "User not authorized."}
  /incidencias/{id}:
      # pedimos una incidencia, dado su id
      get:
        summary: Obtiene una incidencia por un id dado
        tags: 
          - Incidencias
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Default error sample response
            content:
              application/json:
                examples:
                  Incidencias:
                    value: >- 
                          {
                            "incidencia_id": 1,
                            "estacion": "VG1",
                            "direccion": "Av.Victor Balaguer 2",
                            "fecha_averia": "18/04/2022",
                            "estado": false,
                            "descripcion": "El cargador de la planta 2 m plaza 1 no funciona"
                          }
                  Incidencia no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authorized."}

          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "Incidencia not found."}
                        
      # editar incidencia
      put:
          summary: Modificar incidencia
          tags:
          - Incidencias
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - incidencia_id
                  properties:
                    estacion:
                      type: string
                    direccion:
                      type: string
                    fecha_averia:
                      type: string
                    descripcion:
                      type: string
                    estado:
                      type: boolean
                  example:
                    estacion: VG1
                    direccion: "Av.Victor Balaguer 2"
                    fecha_averia: "18/04/022"
                    descripcion: "El cargador de la planta 2 m plaza 1 no funciona"
                    estado: false
          parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
          responses:
            #respuesta correcta
            '200':
              description: Incidencia actualizada
              content:
                application/json:
                  examples:
                    Incidencia actualizada:
                      value: >-
                          {
                            "incidencia_id": 1,
                            "estacion": "VG1",
                            "direccion": "Av.Victor Balaguer 2",
                            "fecha_averia": "18/04/2022",
                            "estado": false,
                            "descripcion": "El cargador de la planta 2 m plaza 1 no funciona"
                          }

            '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Error al meter incidencia:
                      value: >- 
                        {"error": "Malformed request syntax."}
            '404':
              description: Not Found
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "incidencia not found."}
      #borrar incidencia
      delete:
        summary: Elimina incidencia por ID 
        tags:
          - Incidencias
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Eliminado delete
            content:
              application/json:
                examples:
                  Incidencias:
                    value: "{\"msg\": \"Data deleted correctly.\"}"
                  Incidencia no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authorized."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Indicencia not found."}

#########################################################################################

  /estaciones:
      # pedimos una lista de las estaciones
      get:
        summary: Obtiene una lista de estaciones
        tags: 
        - Estaciones
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Con estaciones:
                    value: >- 
                      [
                        {
                          "estacion": "VG1",
                          "direccion": "Av.Victor Balaguer 2",
                          "kwh_max": 720,
                          "kwh_now": 75,
                          "ocupation_max": 32,
                          "ocupation_now": 20,
                          "surface_in_meters": 130,
                          "boss": "Alfredo Manresa"
                        },
                        {
                          "estacion": "VG2",
                          "direccion": "Calle de les Empúries 2",
                          "kwh_max": 640,
                          "kwh_now": 20,
                          "ocupation_max": 32,
                          "ocupation_now": 5,
                          "surface_in_meters": 130,
                          "boss": "Pere Roca"
                        }
                      ]
                  Sin estaciones:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authorized."}
  /estaciones/{id}:
      get:
        summary: Obtiene informacion de una estacion y sus surtidores 
        tags: 
        - Estaciones
        parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  estacion:
                    value: >- 
                          {
                            "estacion": "VG3",
                            "cordenadas": {
                              "latitud": 41.224115,
                              "longitud": 1.730610
                            },
                            "imagen": "http://?????????/estacion/VG3.png",
                            "kwh_max": 20000,
                            "ocupation_max": 8,
                            "ocupation_now": 4,
                            "plaza": [
                              {
                                "id": 1,
                                "kwh_usage": 372,
                                "battery_status": 372,
                                "battery_max": 800,
                                "cliente": "peroivi"
                              },
                              {
                                "id": 7,
                                "kwh_usage": 372,
                                "battery_status": 372,
                                "battery_max": 800,
                                "cliente": "peroivi"
                              },
                              {
                                "id": 3,
                                "kwh_usage": 372,
                                "battery_status": 372,
                                "battery_max": 800,
                                "cliente": "peroivi"
                              },
                              {
                                "id": 6,
                                "kwh_usage": 372,
                                "battery_status": 372,
                                "battery_max": 800,
                                "cliente": "peroivi"
                              }
                            ]
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authorized."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error: 
                    value: >-
                      {"error": "Station not found."}
#borrar incidencia
  /estaciones/{id}/{id_plaza}:
      delete:
        summary: Liberas la plaza ocupada 
        tags:
          - Estaciones
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
          - in: path
            name: id_plaza
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Eliminado delete
            content:
              application/json:
                examples:
                  Estaciones:
                    value: >-
                      {"msg": "Data deleted correctly."}
                  Estaciones no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "Incidencia not found."}
#########################################################################################

  /trabajador:
  # insertamos un trabajor a la lista de trabajadores
    post:
      summary: Inserta un nuevo trabajador
      tags:
      - Trabajadores
      requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                required:
                  - name
                  - lastname
                  - telf
                  - email
                  - rol
                  - dni
                  - password
                properties:
                  dni:
                    type: string
                  name:
                    type: string
                  lastname:
                    type: string
                  email:
                    type: string
                  telf:
                    type: integer
                  rol:
                    type: string
                  password:
                    type: string                    
                  profileImage:
                    type: string 
                    format: binary

                example:
                  name: "Pere"
                  lastname: "Roca"
                  telf: 622554433
                  email: "pere.roca@boss.com"
                  rol: "Dueño"
                  password: "proca"
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Meter trabajador:
                  value: >-
                    {
                      "DNI": "60748880S",
                      "name": "Pere",
                      "lastname": "Roca",
                      "telf": "622554433",
                      "email": "pere.roca@boss.com",
                      "rol": "dueño",
                      "last_access": -1,
                      "picture": "http://?????????/trabajadores/PereRoca.png"
                    }
        '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter incidencia:
                    value: "{\"error\": \"Malformed request syntax.\"}"

        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  /trabajador/{dni}:
      # pedimos un trabajador, dado su id.
      get:
        summary: Obtiene información de un trabajador por su ID
        tags: 
        - Trabajadores
        parameters:
        - in: path
          name: dni
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajador:
                    value: >- 
                      {
                        "DNI": "60748880S",
                        "name": "Pere",
                        "lastname": "Roca",
                        "telf": "622554433",
                        "email": "pere.roca@boss.com",
                        "rol": "dueño",
                        "last_access": -1,
                        "picture": "http://?????????/trabajadores/PereRoca.png"
                      }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not found."}
                    
  /trabajador/{dni}:
  # modificar trabajador de la lista de trabajadores
    put:
      summary: Modifica un trabajador
      tags:
        - Trabajadores
      parameters:
      - in: path
        name: dni
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - lastname
                - telf
                - email
                - rol
                - dni
                - password 
              properties:
                dni:
                  type: string
                name:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                telf:
                  type: integer
                rol:
                  type: string
                password:
                  type: string
                profileImage:
                  type: string 
                  format: binary
                  
              example:
                name: "Pere"
                lastname: "Roca"
                telf: 622554433
                email: "pere.roca@boss.com"
                rol: "Dueño"
                password: "proca"
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Trabajador actualizado: 
                  value: >-
                    {
                      "DNI": "60748880S",
                      "name": "Pere",
                      "lastname": "Roca",
                      "telf": "622554433",
                      "email": "pere.roca@boss.com",
                      "rol": "dueño",
                      "last_access": -1,
                      "picture": "http://?????????/trabajadores/PereRoca.png"
                    }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                Error al meter trabajador:
                  value: "{\"error\": \"Malformed request syntax.\"}"
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: "{\"error\": \"Trabajador not found.\"}"
#########################################################################################
  /login:
    post:
      summary: Login en el sistema
      tags: 
      - Autenticacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string

              example:
                email: "meh@meh.com"
                password: "supersegura"
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Success Login: 
                  value: >-
                    {
                      "token": "tokencito.jwt"
                    }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: "{\"error\": \"Malformed request syntax.\"}"
  /logout:
    get:
      summary: "Log Out"
      tags:
      - Autenticacion
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Success Login: 
                  value: >-
                    {
                      "msg": "Success logout"
                    }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: "{\"error\": \"Malformed request syntax.\"}"

