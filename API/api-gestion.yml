openapi: 3.0.0
info:
  title: API portal de gestion
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000/api
    description: Development
  - url: http://127.0.0.1/api
    description: Development HTTP docker-compose
  - url: https://127.0.0.1/api
    description: Development HTTPS docker-compose
  - url: http://craaxkvm.epsevg.upc.es:23601/api
    description: Production HTTP
  - url: https://craaxkvm.epsevg.upc.es:23600/api
    description: Production HTTPS
paths:
  # incidencias
  /incidencias:
    # pedimos una lista de las incidencias
    get:
      summary: Obtiene una lista de incidencias
      tags:
      - Incidencias
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con incidencias:
                  value: [
                        {
                          "descripcion": "El cargador de la planta 2 m plaza 1 no funciona",
                          "estado": "Arreglando",
                          "fecha": "2022-04-18T00:00:00",
                          "id_averia": 1,
                          "id_trabajador": 1,
                          "name_estacion": "VG1"
                        },
                        {
                          "descripcion": "El cargador de la planta 2 m plaza 1 no funciona",
                          "estado": "Arreglando",
                          "fecha": "2022-04-18T00:00:00",
                          "id_averia": 3,
                          "id_trabajador": null,
                          "name_estacion": "VG1"
                        },
                        {
                          "descripcion": "El cargador de la planta 2 m plaza 1 no funciona",
                          "estado": "Arreglando",
                          "fecha": "2022-04-18T00:00:00",
                          "id_averia": 4,
                          "id_trabajador": null,
                          "name_estacion": "VG1"
                        }
                      ]
                Sin incidencias:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
    # mandamos/resolvemos 1 incidencia]
    post:
        summary: Inserta una nueva incidencia
        tags:
        - Incidencias
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - estacion
                  - estado
                  - fecha_averia
                  - descripcion
                properties:
                  estacion:
                    type: string
                  estado:
                    type: string
                  fecha_averia:
                    type: string
                  descripcion:
                    type: string
                example:
                  estacion: VG1
                  estado: "Arreglando"
                  fecha_averia: "2022-04-18"
                  descripcion: "El cargador de la planta 2 m plaza 1 no funciona"
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter incidencia:
                    value:  >-
                        {
                          "descripcion": "El cargador de la planta 2 m plaza 1 no funciona",
                          "estado": "Arreglando",
                          "fecha": "2022-04-18T00:00:00",
                          "id_averia": 4,
                          "id_trabajador": null,
                          "name_estacion": "VG1"
                        }
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter incidencia:
                    value: >-
                      {"error": "Malformed request syntax."}

  /incidencias/byname/{estacion}:
    # pedimos una lista de incidencias por una estacion dada
    get:
      summary: Obtiene una lista de incidencias para una estacion dada
      tags:
      - Incidencias
      parameters:
        - in: path
          name: estacion
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de incidencias
          content:
            application/json:
              examples:
                Con incidencias:
                  value: >-
                        [
                          {
                            "descripcion": "El cargador de la planta 2 m plaza 1 no funciona",
                            "estado": "Arreglando",
                            "fecha": "2022-04-18T00:00:00",
                            "id_averia": 3,
                            "id_trabajador": null,
                            "name_estacion": "VG1"
                          },
                          {
                            "descripcion": "El cargador de la planta 2 m plaza 1 no funciona",
                            "estado": "Arreglando",
                            "fecha": "2022-04-18T00:00:00",
                            "id_averia": 4,
                            "id_trabajador": null,
                            "name_estacion": "VG1"
                          }
                        ]
                Sin incidencias:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /incidencias/{id}:
      # pedimos una incidencia, dado su id
      get:
        summary: Obtiene una incidencia por un id dado
        tags:
          - Incidencias
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Default error sample response
            content:
              application/json:
                examples:
                  Incidencias:
                    value: >-
                          {
                            "descripcion": "El cargador de la planta 2 m plaza 1 no funciona",
                            "estado": "Arreglando",
                            "fecha": "2022-04-18T00:00:00",
                            "id_averia": 4,
                            "id_trabajador": null,
                            "name_estacion": "VG1"
                          }
                  Incidencia no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "Incidencia not found."}

      # editar incidencia
      put:
          summary: Modificar incidencia
          tags:
          - Incidencias
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - incidencia_id
                  properties:
                    estacion:
                      type: string
                    direccion:
                      type: string
                    fecha_averia:
                      type: string
                    descripcion:
                      type: string
                    estado:
                      type: boolean
                    trabajador:
                      type: integer
                  example:
                    estacion: VG1
                    trabajador: 1
                    fecha_averia: "18/04/022"
                    descripcion: "El cargador de la planta 2 m plaza 1 no funciona"
                    estado: false
          parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
          responses:
            #respuesta correcta
            '200':
              description: Incidencia actualizada
              content:
                application/json:
                  examples:
                    Incidencia actualizada:
                      value: >-
                          {
                            "descripcion": "El cargador de la planta 2 m plaza 1 no funciona",
                            "estado": "Arreglando",
                            "fecha": "2022-04-18T00:00:00",
                            "id_averia": 4,
                            "id_trabajador": 1,
                            "name_estacion": "VG1"
                          }
            '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Error al meter incidencia:
                      value: >-
                        {"error": "Malformed request syntax."}
            '404':
              description: Not Found
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "incidencia not found."}
      #borrar incidencia
      delete:
        summary: Elimina incidencia por ID
        tags:
          - Incidencias
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Eliminado delete
            content:
              application/json:
                examples:
                  Incidencias:
                    value: "{\"msg\": \"Data deleted correctly.\"}"
                  Incidencia no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Incidencia not found."}
#########################################################################################

  /estaciones:
      # pedimos una lista de las estaciones
      get:
        summary: Obtiene una lista de estaciones
        tags:
        - Estaciones
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Con estaciones:
                    value: >-
                      [
                        {
                          "estacion": "VG1",
                          "direccion": "Av.Victor Balaguer 2",
                          "kwh_max": 720,
                          "kwh_now": 75,
                          "ocupation_max": 32,
                          "ocupation_now": 20,
                          "surface_in_meters": 130,
                          "boss": "Alfredo Manresa"
                        },
                        {
                          "estacion": "VG2",
                          "direccion": "Calle de les Empúries 2",
                          "kwh_max": 640,
                          "kwh_now": 20,
                          "ocupation_max": 32,
                          "ocupation_now": 5,
                          "surface_in_meters": 130,
                          "boss": "Pere Roca"
                        }
                      ]
                  Sin estaciones:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
  /estaciones/{id}:
      get:
        summary: Obtiene informacion de una estacion y sus surtidores
        tags:
        - Estaciones
        parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  estacion:
                    value: >-
                          {
                            "estacion": "VG3",
                            "cordenadas": {
                              "latitud": 41.224115,
                              "longitud": 1.730610
                            },
                            "imagen": "http://?????????/estacion/VG3.png",
                            "kwh_max": 20000,
                            "ocupation_max": 8,
                            "ocupation_now": 4,
                            "plaza": [
                              {
                                "id": 1,
                                "kwh_usage": 372,
                                "battery_status": 372,
                                "battery_max": 800,
                                "cliente": "peroivi"
                              },
                              {
                                "id": 7,
                                "kwh_usage": 372,
                                "battery_status": 372,
                                "battery_max": 800,
                                "cliente": "peroivi"
                              },
                              {
                                "id": 3,
                                "kwh_usage": 372,
                                "battery_status": 372,
                                "battery_max": 800,
                                "cliente": "peroivi"
                              },
                              {
                                "id": 6,
                                "kwh_usage": 372,
                                "battery_status": 372,
                                "battery_max": 800,
                                "cliente": "peroivi"
                              }
                            ]
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Station not found."}
#borrar incidencia
  /estaciones/{id}/{id_plaza}:
      delete:
        summary: Liberas la plaza ocupada
        tags:
          - Estaciones
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
          - in: path
            name: id_plaza
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Eliminado delete
            content:
              application/json:
                examples:
                  Estaciones:
                    value: >-
                      {"msg": "Data deleted correctly."}
                  Estaciones no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Incidencia not found."}
#########################################################################################
  /trabajador:
      # pedimos una lista de trabajadores
      get:
        summary: Obtiene una lista de trabajadores
        tags:
        - Trabajadores
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajadores:
                    value: >-
                      [
                        {
                            "name": "Pere Roca",
                            "rol": "dueño",
                            "last_access": -1
                        },
                        {
                            "name": "Pere Alberto",
                            "rol": "trabajador",
                            "last_access": 0
                        },
                        {
                            "name": "Pere Garcia",
                            "rol": "Developer",
                            "ultimo_acceso": 45
                        },
                        {
                            "name": "Pere Juanjo",
                            "rol": "esclavo",
                            "last_access": 90
                        }
                      ]
                  Sin trabajadores:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Trabajador not authorized."}

      post:
        summary: Inserta un nuevo trabajador
        tags:
        - Trabajadores
        requestBody:
            required: true
            content:
              multipart/form-data:
                schema:
                  type: object
                  required:
                    - name
                    - lastname
                    - telf
                    - email
                    - rol
                    - dni
                    - password
                  properties:
                    dni:
                      type: string
                    name:
                      type: string
                    lastname:
                      type: string
                    email:
                      type: string
                    telf:
                      type: string
                    rol:
                      type: string
                    username:
                      type: string
                    password:
                      type: string
                    profileImage:
                      type: string
                      format: binary

                  example:
                    name: "Pere"
                    lastname: "Roca"
                    telf: "622554433"
                    email: "pere.roca@boss.com"
                    rol: "Dueño"
                    password: "proca"
                    username: "proca"
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter trabajador:
                    value: >-
                      {
                        "dni": "60748880S",
                        "name": "Pere",
                        "lastname": "Roca",
                        "telf": "622554433",
                        "email": "pere.roca@boss.com",
                        "rol": "dueño",
                        "last_access": -1,
                        "picture": "http://?????????/trabajadores/PereRoca.png"
                      }
          '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Error al meter incidencia:
                      value: {"error": "Malformed request syntax."}

          '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "Trabajador not authorized."}
  /trabajador/{dni}:
      # pedimos un trabajador, dado su id.
      get:
        summary: Obtiene información de un trabajador por su ID
        tags:
        - Trabajadores
        parameters:
        - in: path
          name: dni
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajador:
                    value: >-
                      {
                        "dni": "60748880S",
                        "name": "Pere",
                        "lastname": "Roca",
                        "telf": "622554433",
                        "email": "pere.roca@boss.com",
                        "rol": "dueño",
                        "last_access": -1,
                        "picture": "http://?????????/trabajadores/PereRoca.png"
                      }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Trabajdor not authorized."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Trabajador not found."}
      # modificar trabajador de la lista de trabajadores
      put:
        summary: Modifica un trabajador
        tags:
          - Trabajadores
        parameters:
        - in: path
          name: dni
          required: true
          schema:
            type: string
        requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  dni:
                    type: string
                  name:
                    type: string
                  lastname:
                    type: string
                  email:
                    type: string
                  telf:
                    type: string
                  rol:
                    type: string
                  password:
                    type: string
                  profileImage:
                    type: string
                    format: binary

                example:
                  name: "Pere"
                  lastname: "Roca"
                  telf: "622554433"
                  email: "pere.roca@boss.com"
                  rol: "Dueño"
                  password: "proca"
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajador actualizado:
                    value: >-
                      {
                        "dni": "60748880S",
                        "name": "Pere",
                        "lastname": "Roca",
                        "telf": "622554433",
                        "email": "pere.roca@boss.com",
                        "rol": "dueño",
                        "last_access": -1,
                        "picture": "http://?????????/trabajadores/PereRoca.png"
                      }
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter trabajador:
                    value: {"error": "Malformed request syntax."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: {"error": "Trabajador not found."}


      delete:
        summary: Eliminar un trabajador por su ID
        tags:
          - Trabajadores
        parameters:
          - in: path
            name: dni
            required: true
            schema:
              type: string
        responses:
            '200':
              description: Peticion correcta
              content:
                application/json:
                  examples:
                    Trabajador:
                      value: >-
                        {"msg": "Trabajdor deleted succesfully"}

            '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "Trabajador not authorized."}
            '404':
              description: Not Found
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "Trabajador not found."}
#########################################################################################
  
  /soporte:
    get:
        summary: Obtiene una lista de peticiones que se han hecho al servicio técnico
        tags: 
        - Soporte tecnico
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Peticion a soporte:
                    value: >- 
                        [
                          {
                            "asunto": "App no me va",
                            "estado": false,
                            "fecha": "2022-05-26T16:52:37.020462",
                            "id_ticket": 1,
                            "mensaje": "Problema con la aplicación movil"
                          },
                          {
                            "asunto": "App no me va",
                            "estado": false,
                            "fecha": "2022-05-26T16:54:17.253574",
                            "id_ticket": 2,
                            "mensaje": "Problema con la aplicación movil"
                          }
                        ]
                  Sin peticiones a soporte:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  # Creacion de una ayuda o ticket al soporte tecnico
    post:
      summary: Publica una petición a soporte tecnico
      tags:
        - Soporte tecnico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - descripcion
                - estado
                - cliente
                - asunto
              properties:
                descripcion:
                  type: string
                estado:
                  type: boolean
                asunto:
                  type: string
                cliente: 
                  type: integer
            example:
              asunto: "App no me va"
              estado: False
              cliente: 1
              descripcion: "Problema con la aplicación movil"
              
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar petición a soporte tecnico:
                  value: >-
                    [
                      {
                        "Mensajes": [],
                        "asunto": "App no me va",
                        "estado": false,
                        "fecha": "2022-05-26T16:54:17.253574",
                        "id_ticket": 2,
                        "mensaje": "Problema con la aplicación movil"
                      }
                    ]
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Malformed request syntax."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}

#Cogemos toda informacion sobre los tickes de un usuario que ha pedido ayuda al soporte tecnico
  /soporte/{ticket_id}:
    get:
      summary: Encontrar el ticket/la peticion de soporte del usuario
      tags:
        - Soporte tecnico
      parameters:
      - in: path
        name: ticket_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
               Consultando petición a soporte tecnico:
                  value: {
                          "Mensajes": [
                            {
                              "contenido": "aloha",
                              "date": "2022-05-26T16:52:40.062432",
                              "id_mensaje": 1
                            }
                          ],
                          "asunto": "App no me va",
                          "estado": false,
                          "fecha": "2022-05-26T16:52:37.020462",
                          "id_ticket": 1,
                          "mensaje": "Problema con la aplicación movil"
                        }
        '404':
          description: Ticket no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Ticket not found."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
    post:
      summary: Dado un usuario (por ahora, luego se asignará con el token) en concreto pueda generar un mensaje para un ticket
      tags:
        - Soporte tecnico
      parameters:
      - in: path
        name: ticket_id
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - mensaje
                - cliente
              properties:
                mensaje:
                  type: string
                cliente:
                  type: integer
              example:
                mensaje: "no se que me esta contando"
                cliente: 1
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar petición a soporte tecnico:
                  value: {
                          "Mensajes": [
                            {
                              "contenido": "aloha",
                              "date": "2022-05-26T16:52:40.062432",
                              "id_mensaje": 1
                            }
                          ],
                          "asunto": "App no me va",
                          "estado": false,
                          "fecha": "2022-05-26T16:52:37.020462",
                          "id_ticket": 1,
                          "mensaje": "Problema con la aplicación movil"
                        }
        '400':
          description: Ticket incorrecto
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Ticket not valid."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
        '404':
          description: Ticket no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Ticket not found."}'

  # Eliminacion del ticket o peticion al soporte tecnico
    delete:
      summary: Eliminar un ticket/una peticion del soporte del usuario
      tags:
        - Soporte tecnico
      parameters:
      - in: path
        name: ticket_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Ticket correcto
          content:
            application/json:
              examples:
                Eliminando una petición a soporte tecnico:
                  value: |-
                    {
                      "msg": "Ticket deleted succesfully."
                    }
        '400':
          description: Ticket incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Ticket not valid."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
        '404':
          description: Ticket no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error" : "Ticket not found."}'
        '410':
          description: Ticket ya eliminado
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Ticket have been deleted."}'
                  
  /soporte/byuser/{user_id}:
    get:
      summary: (NO ME USES) Obtiene los mensajes que ha generado un usuario en el soporte
      tags: 
      - Soporte tecnico
      parameters:
      - in: path
        name: user_id
        required: true
        schema: 
          type: integer
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Trabajador:
                  value:  
                    {
                      "Tickets": [
                        {
                          "asunto": "App no me va",
                          "estado": false,
                          "fecha": "2022-05-26T16:52:37.020462",
                          "id_ticket": 1,
                          "mensaje": "Problema con la aplicación movil"
                        }
                      ],
                      "apellido": "garcia",
                      "dni": "245363Y",
                      "email": "meh@gmail.com",
                      "foto": "foto_chula",
                      "id_usuari": 1,
                      "nombre": "sergi",
                      "password": "mehmeh123",
                      "telefono": 4674387249,
                      "type": "cliente",
                      "username": "sergi.ib",
                      "vehiculos": []
                    }
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >- 
                    {"error": "User not authorized."}
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: >- 
                    {"error": "User not found."}
                  
    
  /soporte/delete_missage/{msg_id}:
    delete:
      summary: Elimina un mensaje de una peticion
      tags:
        - Soporte tecnico
      parameters:
      - in: path
        name: msg_id
        required: true
        schema: 
          type: integer
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Eliminado mensaje:
                  value: |-
                    {
                      "msg": "Message deleted succesfully"
                    }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Message not valid"}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
        '404':
          description: Peticion no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error" : "Message not found."}'
        '410':
          description: Peticion ya eliminada
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Message have been deleted."}'

  # reservas
  /reservas:
    get:
      summary: Obtiene todas las reservas de todos los clientes (no me uses)
      tags:
        - Reservas
      responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter reserva:
                    value:  >-
                        [
                          {
                            "asistida": true,
                            "estado": true,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.798066",
                            "fecha_salida": "2022-05-23T13:49:59.798066",
                            "id_cargador": 257,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 10.1,
                            "precio_carga_completa": 25.2,
                            "procetnaje_carga": 50,
                            "tarifa": 90.99
                          },
                          {
                            "asistida": true,
                            "estado": false,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.808033",
                            "fecha_salida": "2022-05-23T13:49:59.808033",
                            "id_cargador": 258,
                            "id_cliente": 1,
                            "id_reserva": 2,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 60,
                            "precio_carga_completa": 50,
                            "procetnaje_carga": 33,
                            "tarifa": 44.44
                          }
                        ]
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter reserva:
                    value: >-
                      {"error": "Malformed request syntax."}
                      
    # mandamos/resolvemos 1 reserva]
    post:
      summary: Inserta una nueva reserva
      tags:
      - Reservas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - id_estacion
                  - fecha_inicio
                  - fecha_final
                  - id_vehiculo
                  - id_cliente
                  - tarifa
                  - asistida
                  - porcentaje_carga
                  - precio_carga_completo
                  - precio_carga_actual
                  - estado_pago
              properties:
                id_estacion:
                  type: string
                fecha_inicio:
                  type: string
                fecha_final:
                  type: string
                id_vehiculo:
                  type: string
                id_cliente:
                  type: string
                tarifa:
                  type: number
                asistida:
                  type: boolean
                porcentaje_carga:
                  type: number
                precio_carga_completo:
                  type: number
                precio_carga_actual:
                  type: number
                estado_pago:
                  type: boolean
              example:
                id_estacion: "VG1"
                fecha_inicio: "18-04-2022 11:00"
                fecha_final: "18-04-2022 18:00"
                id_vehiculo: "99HL0HH"
                id_cliente: "25565872D"
                tarifa: 12.7
                asistida: True
                porcentaje_carga: 30
                precio_carga_completo: 30
                precio_carga_actual: 5
                estado_pago: True
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Meter reserva:
                  value:  >-
                      {
                        "asistida": true,
                        "estado": true,
                        "estado_pago": true,
                        "fecha_entrada": "2022-05-23T13:49:59.798066",
                        "fecha_salida": "2022-05-23T13:49:59.798066",
                        "id_cargador": 257,
                        "id_cliente": 1,
                        "id_reserva": 1,
                        "id_vehiculo": "2WRQ7QQ",
                        "precio_carga_actual": 10.1,
                        "precio_carga_completa": 25.2,
                        "procetnaje_carga": 50,
                        "tarifa": 90.99
                      }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                Error al meter reserva:
                  value: >-
                    {"error": "Malformed request syntax."}


  /reservas/estacion/{id_estacion}:
    # pedimos una lista de reservas por una estacion dada
    get:
      summary: Obtiene una lista de reservas para una estacion dada obtiene solo las reservas desde ahora al futuro
      tags:
      - Reservas
      parameters:
        - in: path
          name: id_estacion
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas por estacion desde la fecha actual al futuro
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "asistida": true,
                            "estado": true,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.798066",
                            "fecha_salida": "2022-05-23T13:49:59.798066",
                            "id_cargador": 257,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 10.1,
                            "precio_carga_completa": 25.2,
                            "procetnaje_carga": 50,
                            "tarifa": 90.99
                          },
                          {
                            "asistida": true,
                            "estado": false,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.808033",
                            "fecha_salida": "2022-05-23T13:49:59.808033",
                            "id_cargador": 258,
                            "id_cliente": 1,
                            "id_reserva": 2,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 60,
                            "precio_carga_completa": 50,
                            "procetnaje_carga": 33,
                            "tarifa": 44.44
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/bydni/{dni}:
    # pedimos una lista de reservas por un dni dado
    get:
      summary: Obtiene una lista de reservas para un dni dado
      tags:
      - Reservas
      parameters:
        - in: path
          name: dni
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                      [
                        {
                          "asistida": true,
                          "estado": true,
                          "estado_pago": true,
                          "fecha_entrada": "2022-05-23T13:49:59.798066",
                          "fecha_salida": "2022-05-23T13:49:59.798066",
                          "id_cargador": 257,
                          "id_cliente": 1,
                          "id_reserva": 1,
                          "id_vehiculo": "2WRQ7QQ",
                          "precio_carga_actual": 10.1,
                          "precio_carga_completa": 25.2,
                          "procetnaje_carga": 50,
                          "tarifa": 90.99
                        },
                        {
                          "asistida": true,
                          "estado": false,
                          "estado_pago": true,
                          "fecha_entrada": "2022-05-23T13:49:59.808033",
                          "fecha_salida": "2022-05-23T13:49:59.808033",
                          "id_cargador": 258,
                          "id_cliente": 1,
                          "id_reserva": 2,
                          "id_vehiculo": "2WRQ7QQ",
                          "precio_carga_actual": 60,
                          "precio_carga_completa": 50,
                          "procetnaje_carga": 33,
                          "tarifa": 44.44
                        }
                      ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/bymatricula/{matricula}:
    # pedimos una lista de reservas por una matriculña dada
    get:
      summary: Obtiene una lista de reservas para una matricula dada
      tags:
      - Reservas
      parameters:
        - in: path
          name: matricula
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "asistida": true,
                            "estado": true,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.798066",
                            "fecha_salida": "2022-05-23T13:49:59.798066",
                            "id_cargador": 257,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 10.1,
                            "precio_carga_completa": 25.2,
                            "procetnaje_carga": 50,
                            "tarifa": 90.99
                          },
                          {
                            "asistida": true,
                            "estado": false,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.808033",
                            "fecha_salida": "2022-05-23T13:49:59.808033",
                            "id_cargador": 258,
                            "id_cliente": 1,
                            "id_reserva": 2,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 60,
                            "precio_carga_completa": 50,
                            "procetnaje_carga": 33,
                            "tarifa": 44.44
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/{id}:
      # pedimos una reserva, dado su id
      get:
        summary: Obtiene una reserva por un id dado
        tags:
          - Reservas
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Default error sample response
            content:
              application/json:
                examples:
                  Reservas:
                    value:  >-
                          {
                            "asistida": true,
                            "estado": true,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.798066",
                            "fecha_salida": "2022-05-23T13:49:59.798066",
                            "id_cargador": 257,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 10.1,
                            "precio_carga_completa": 25.2,
                            "procetnaje_carga": 50,
                            "tarifa": 90.99
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}

          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "Reserva not found."}

      #borrar reserva
      delete:
        summary: Elimina reserva por ID
        tags:
          - Reservas
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Eliminado delete
            content:
              application/json:
                examples:
                  Reservas:
                    value: {"msg": "Data deleted correctly."}
                  Reserva no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Reserva not found."
# clientes
  /clientes:
    # pedimos una lista de las incidencias
    get:
      summary: Obtiene una lista de clientes
      tags:
      - Clientes
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con clientes:
                  value: [
                          {
                            "id_cliente": 1,
                            # tipo ??????????
                            "nombre": "Pablo",
                            "apellido": "Escobar",
                            "email": "pablo@gmail.com",
                            "DNI": "23769543B",
                            "foto": "http://?????????/clientes/pablo.png",
                            "telefono": "643876101",
                            "username": "xXpabloXx",
                          },
                          {
                            "id_cliente": 2,
                            # tipo ??????????
                            "nombre": "Javier",
                            "apellido": "Sanchez",
                            "email": "javi@gmail.com",
                            "DNI": "23769612h",
                            "foto": "http://?????????/clientes/javi.png",
                            "telefono": "643876101",
                            "username": "xXpabloXx",
                          }
                        ]

                Sin clientes:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
    post:
        summary: Inserta un nuevo cliente
        tags:
        - Clientes
        requestBody:
            required: true
            content:
              multipart/form-data:
                schema:
                  type: object
                  required:
                    - nombre
                    - apellido
                    - email
                    - DNI
                    - foto
                    - telefono
                    - username
                    - password
                  properties:
                    nombre:
                      type: string
                    apellido:
                      type: string
                    email:
                      type: string
                    DNI:
                      type: string
                    foto:
                      type: string
                    telefono:
                      type: integer
                    username:
                      type: string
                    password:
                      type: string

                  example:
                    name: "Pere"
                    lastname: "Roca"
                    telf: "622554433"
                    email: "pere.roca@boss.com"
                    rol: "Dueño"
                    password: "proca"
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter cliente:
                    value: [
                      {
                        "id_cliente": 1,
                        # tipo ??????????
                        "nombre": "Pablo",
                        "apellido": "Escobar",
                        "email": "pablo@gmail.com",
                        "DNI": "23769543B",
                        "foto": "http://?????????/clientes/pablo.png",
                        "telefono": "643876101",
                        "username": "xXpabloXx",
                      },
                      ]
          '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Error al meter incidencia:
                      value: {"error": "Malformed request syntax."}

          '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "User not authorized."}
  /clientes/{id}:
    # pedimos un cliente dado su id
    get:
      summary: Obtiene un cliente por un id dado
      tags:
        - Clientes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Default error sample response
          content:
            application/json:
              examples:
                Cliente encontrado:
                  value:
                      [
                        {
                          "id_cliente": 1,
                          # tipo ??????????
                          "nombre": "Pablo",
                          "apellido": "Escobar",
                          "email": "pablo@gmail.com",
                          "DNI": "23769543B",
                          "foto": "http://?????????/clientes/pablo.png",
                          "telefono": "643876101",
                          "username": "xXpabloXx",
                        },
                      ]
                Cliente no encontrado:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "User not authenticated."}
        '404':
          description: Not found
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "Client not found."}
  #borrar cliente
    delete:
      summary: Elimina cliente por id
      tags:
        - Clientes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cliente eliminado delete
          content:
            application/json:
              examples:
                Incidencias:
                  value: "{\"msg\": \"Client deleted correctly.\"}"
                Incidencia no encontrada:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "Client not found."}
                    
  /clientes/bydni/{DNI}:
    # pedimos un cliente dado su id
    get:
      summary: Obtiene un cliente dado su DNI
      tags:
        - Clientes
      parameters:
        - in: path
          name: DNI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default error sample response
          content:
            application/json:
              examples:
                Cliente encontrado:
                  value:
                      [
                        {
                          "id_cliente": 1,
                          # tipo ??????????
                          "nombre": "Pablo",
                          "apellido": "Escobar",
                          "email": "pablo@gmail.com",
                          "DNI": "23769543B",
                          "foto": "http://?????????/clientes/pablo.png",
                          "telefono": "643876101",
                          "username": "xXpabloXx",
                        }
                      ]
                Cliente no encontrado:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "User not authenticated."}
        '404':
          description: Not found
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "Client not found."}
  #borrar cliente
  
    delete:
      summary: Elimina cliente por id
      tags:
        - Clientes
      parameters:
        - in: path
          name: DNI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente eliminado delete
          content:
            application/json:
              examples:
                Incidencias:
                  value: "{\"msg\": \"Client deleted correctly.\"}"
                Incidencia no encontrada:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "Client not found."}

#######################################################################################################

#######################################################################################################
  /estadisticas:
    get:
        summary: Obtiene estadisticas de todas las estaciones
        tags:
          - Estadisticas
        responses:
          '200':
            description: Respuesta por defecto buena
            content:
              application/json:
                examples:
                  Reservas:
                    value:  >-
                        [
                        	{
                        		"estacion": "VG1",
                        		"direccion": "Av.Victor Balaguer 2",
                        		"kwh_max": 720,
                        		"kwh_now": 75,
                        		"dias": [
                        			{
                        				"dia": "2022-05-10",
                        				"potencia_max_cons": 720
                        			},
                        			{
                        				"dia": "2022-05-11",
                        				"potencia_max_cons": 720
                        			},
                        			{
                        				"dia": "2022-05-12",
                        				"potencia_max_cons": 720
                        			},
                        			{
                        				"dia": "2022-05-13",
                        				"potencia_max_cons": 560
                        			},
                        			{
                        				"dia": "2022-05-14",
                        				"potencia_max_cons": 330
                        			},
                        			{
                        				"dia": "2022-05-12",
                        				"potencia_max_cons": 120
                        			}
                        		]
                        	},
                        	{
                        		"estacion": "VG2",
                        		"direccion": "Av. Alberto 2",
                        		"kwh_max": 330,
                        		"kwh_now": 75,
                        		"dias": [
                        			{
                        				"dia": "2022-05-10",
                        				"potencia_max_cons": 123
                        			},
                        			{
                        				"dia": "2022-05-11",
                        				"potencia_max_cons": 432
                        			},
                        			{
                        				"dia": "2022-05-12",
                        				"potencia_max_cons": 432
                        			},
                        			{
                        				"dia": "2022-05-13",
                        				"potencia_max_cons": 233
                        			},
                        			{
                        				"dia": "2022-05-14",
                        				"potencia_max_cons": 200
                        			},
                        			{
                        				"dia": "2022-05-12",
                        				"potencia_max_cons": 500
                        			}
                        		]
                        	}
                        ]
                        
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}

          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "Estacion not found."}
  /estadisticas/{estacion}/{data_inicio}/{data_final}:
    get:
          summary: Obtiene estadisticas para todos los cargadores de una estación entre una data inicio y una data final.
          tags:
            - Estadisticas
          parameters:
            - in: path
              name: estacion
              required: true
              schema:
                type: integer
            - in: path
              name: data_inicio
              required: true
              schema:
                type: string
            - in: path
              name: data_final
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Respuesta por defecto buena
              content:
                application/json:
                  examples:
                    Reservas:
                      value:  >-
                        [
                        	{
                        		"estacion": "VG1",
                        		"direccion": "Av.Victor Balaguer 2",
                        		"kwh_max": 720,
                        		"kwh_now": 75,
                        		"dias": [
                        			{
                        				"dia": "2022-05-12",
                        				"potencia_max_cons": 720
                        			},
                        			{
                        				"dia": "2022-05-13",
                        				"potencia_max_cons": 560
                        			},
                        			{
                        				"dia": "2022-05-14",
                        				"potencia_max_cons": 330
                        			},
                        			{
                        				"dia": "2022-05-12",
                        				"potencia_max_cons": 120
                        			}
                        		]
                        	}
                        ]
            '400':
              description: Malformed
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                          {"error": "Bad request"}      
            '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                          {"error": "User not authenticated."}
  
            '404':
              description: Not found
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                          {"error": "Estacion not found."}
#############################################################################
  /promociones:
      # pedimos una lista de promociones
      get:
        summary: Obtiene una lista de trabajadores
        tags:
        - Promociones
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajadores:
                    value: >-
                      [
                        {
                          "descripcion": "20% de descuento en la electrolinera de Vilanova!",
                          "descuento": 20,
                          "estado": "activa",
                          "fecha_inicio": "2022-04-18T11:00:00",
                          "fecha_fin": "2022-04-18T21:00:00",
                          "id_promo": 1
                        },
                        {
                          "descripcion": "20% de descuento en la electrolinera de Barcelona!",
                          "descuento": 15,
                          "estado": "inactiva",
                          "fecha_inicio": "2022-04-18T17:00:00",
                          "fecha_fin": "2022-04-18T22:00:00",
                          "id_promo": 2
                        },
                        {
                          "descripcion": "20% de descuento en la electrolinera de Sitges!",
                          "descuento": 25,
                          "estado": "activa",
                          "fecha_inicio": "2022-04-18T10:00:00",
                          "fecha_fin": "2022-04-18T19:00:00",
                          "id_promo": 3
                        }
                      ]
                  No_promociones:
                    value: '[]'
          '403':
            description: Denied access
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}

      post:
        summary: Inserta un nueva promocion
        tags:
        - Promociones
        requestBody:
            required: true
            content:
              multipart/form-data:
                schema:
                  type: object
                  required:
                    - descripcion
                    - descuento
                    - estado
                    - fecha_inicio
                    - fecha_fin
                  properties:
                    descuento:
                      type: integer
                    fecha_inicio:
                      type: string
                    fecha_fin:
                      type: string
                    descripcion:
                      type: string
                    estado:
                      type: boolean
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter trabajador:
                    value: >-
                      {
                        "descripcion": "20% de descuento en la electrolinera de Sitges!",
                        "descuento": 25,
                        "estado": true,
                        "fecha_inicio": "2022-04-18T10:00:00",
                        "fecha_fin": "2022-04-18T19:00:00",
                        "id_promo": 3
                      }
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter incidencia:
                    value: {"error": "Malformed request syntax."}
          '403':
            description: Denied access
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
                    
  /promociones/estado/{estado}:
  # pedimos una lista de promociones dado su estado (activa/inactiva)
    get:
      summary: Obtiene información de una promocion en caso de que este activa
      tags:
      - Promociones
      parameters:
      - in: path
        name: estado
        required: true
        schema:
          type: boolean
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con promociones activas:
                  value: >-
                      [
                        {
                          "descripcion": "20% de descuento en la electrolinera de Vilanova!",
                          "descuento": 20,
                          "estado": true,
                          "fecha_inicio": "2022-04-18T11:00:00",
                          "fecha_fin": "2022-04-18T21:00:00",
                          "id_promo": 1
                        },
                        {
                          "descripcion": "20% de descuento en la electrolinera de Sitges!",
                          "descuento": 25,
                          "estado": true,
                          "fecha_inicio": "2022-04-18T10:00:00",
                          "fecha_fin": "2022-04-18T19:00:00",
                          "id_promo": 3
                        }
                      ]
                Sin_promociones_activas:
                  value: >-
                      [
                        {
                          "descripcion": "20% de descuento en la electrolinera de Barcelona!",
                          "descuento": 15,
                          "estado": false,
                          "fecha_inicio": "2022-04-18T17:00:00",
                          "fecha_fin": "2022-04-18T22:00:00",
                          "id_promo": 2
                        }
                      ]
                Sin_promociones:
                  value: '[]'
        '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter incidencia:
                    value: {"error": "Malformed request syntax."}
        '403':
            description: Denied access
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
  /promociones/{id}:
  # pedimos una promocion dado su id.
    get:
      summary: Obtiene información de una promocion por su ID
      tags:
      - Promociones
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Trabajador:
                  value: >-
                      {
                        "descripcion": "20% de descuento en la electrolinera de Sitges!",
                        "descuento": 25,
                        "estado": true,
                        "fecha_inicio": "2022-04-18T10:00:00",
                        "fecha_fin": "2022-04-18T19:00:00",
                        "id_promo": 3
                      }
        '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter incidencia:
                    value: {"error": "Malformed request syntax."}
        '403':
            description: Denied access
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "Promocion not found."}
      
    # modificar una promocion dado su id
    put:
      summary: Modifica una promocion
      tags:
        - Promociones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                estado:
                  type: boolean
                descuento:
                  type: integer
                fecha_inicio:
                  type: string
                fecha_fin:
                  type: string
                descripcion:
                  type: string

      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Trabajador actualizado:
                  value: >-
                      {
                        "descripcion": "20% de descuento en la electrolinera de Sitges!",
                        "descuento": 25,
                        "estado": true,
                        "fecha_inicio": "2022-04-18T10:00:00",
                        "fecha_fin": "2022-04-18T19:00:00",
                        "id_promo": 3
                      }
        '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter incidencia:
                    value: {"error": "Malformed request syntax."}
        '403':
            description: Denied access
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
        '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: {"error": "Promocion not found."}

    delete:
      summary: Eliminar una promcion dado su id
      tags:
        - Promociones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajador:
                    value: >-
                      {"msg": "Promocion deleted succesfully"}
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter incidencia:
                    value: {"error": "Malformed request syntax."}
          '403':
            description: Denied access
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: {"error": "Promocion not found."}

