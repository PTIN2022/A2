openapi: 3.0.0
info:
  title: API portal de gestion
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000/
    description: Developments
paths:
  # reservas
  /reservas:
    # pedimos una lista de las reservas
    get:
      summary: Obtiene una lista de reservas
      tags:
      - Reservas (m치s para web)
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con reservas:
                  value: [
                          {
                            "reserva_id": 1,
                            "estacion": "VG1",
                            "desde": "10:20",
                            "hasta": "11:20",
                            "matricula": "LKE1237",
                            "data": "28-02-2020",
                            "DNI": "1236712N"
                          },
                          {
                            "reserva_id": 2,
                            "estacion": "VG1",
                            "desde": "13:20",
                            "hasta": "14:20",
                            "matricula": "LKJ1237",
                            "data": "28-02-2020",
                            "DNI": "90129301N"
                          },
                          {
                            "reserva_id": 3,
                            "estacion": "VG2",
                            "desde": "17:20",
                            "hasta": "18:20",
                            "matricula": "LKS1237",
                            "data": "28-02-2020",
                            "DNI": "81293N"
                          }
                        ]

                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
    # mandamos/resolvemos 1 reserva]
    post:
        summary: Inserta una nueva reserva
        tags:
        - Reservas (m치s para web)
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                    - estacion
                    - desde
                    - hasta
                    - matricula
                    - data
                    - DNI
                properties:
                  estacion:
                    type: string
                  desde:
                    type: string
                  hasta:
                    type: string
                  matricula:
                    type: string
                  data:
                    type: string
                  DNI:
                    type: string
                example:
                  estacion: VG1
                  desde: "10:20"
                  hasta: "11:00"
                  matricula: "LKE2378"
                  data: "18-04-2022"
                  DNI: "1238712N"
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter reserva:
                    value:  >-
                        {
                          "reserva_id": 1,
                          "estacion": "VG1",
                          "desde": "10:20",
                          "hasta": "11:20",
                          "matricula": "LKE1237",
                          "data": "28-02-2020",
                          "DNI": "1236712N"
                        }
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter reserva:
                    value: >-
                      {"error": "Malformed request syntax."}

  /reservas/byname/{estacion}:
    # pedimos una lista de reservas por una estacion dada
    get:
      summary: Obtiene una lista de reservas para una estacion dada
      tags:
      - Reservas
      parameters:
        - in: path
          name: estacion
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "reserva_id": 1,
                            "estacion": "VG1",
                            "desde": "10:20",
                            "hasta": "11:20",
                            "matricula": "LKE1237",
                            "data": "28-02-2020",
                            "DNI": "1236712N"
                          },
                          {
                            "reserva_id": 2,
                            "estacion": "VG1",
                            "desde": "13:20",
                            "hasta": "14:20",
                            "matricula": "LKE1237",
                            "data": "28-02-2020",
                            "DNI": "1236712N"
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/bydni/{dni}:
    # pedimos una lista de reservas por un dni dado
    get:
      summary: Obtiene una lista de reservas para un dni dado
      tags:
      - Reservas (m치s para web)
      parameters:
        - in: path
          name: dni
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "reserva_id": 1,
                            "estacion": "VG1",
                            "desde": "10:20",
                            "hasta": "11:20",
                            "matricula": "LKE1237",
                            "data": "28-02-2020",
                            "DNI": "1236712N"
                          },
                          {
                            "reserva_id": 2,
                            "estacion": "VG1",
                            "desde": "13:20",
                            "hasta": "14:20",
                            "matricula": "LKE1237",
                            "data": "28-02-2020",
                            "DNI": "1236712N"
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/bymatricula/{matricula}:
    # pedimos una lista de reservas por una matricul침a dada
    get:
      summary: Obtiene una lista de reservas para una matricula dada
      tags:
      - Reservas
      parameters:
        - in: path
          name: matricula
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "reserva_id": 1,
                            "estacion": "VG1",
                            "desde": "10:20",
                            "hasta": "11:20",
                            "matricula": "LKE1237",
                            "data": "28-02-2020",
                            "DNI": "1236712N"
                          },
                          {
                            "reserva_id": 2,
                            "estacion": "VG1",
                            "desde": "13:20",
                            "hasta": "14:20",
                            "matricula": "LKE1237",
                            "data": "28-02-2020",
                            "DNI": "1236712N"
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/{id}:
      # pedimos una reserva, dado su id
      get:
        summary: Obtiene una reserva por un id dado
        tags:
          - Reservas
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Default error sample response
            content:
              application/json:
                examples:
                  Reservas:
                    value:  >-
                        {
                          "estacion": "VG1",
                          "desde": "10:20",
                          "hasta": "11:20",
                          "matricula": "LKE1237",
                          "data": "28-02-2020",
                          "DNI": "1236712N"
                        }
                  Reserva no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}

          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "Reserva not found."}

      # editar reserva
      put:
          summary: Modificar reserva
          tags:
          - Reservas
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - reserva_id
                  properties:
                    estacion:
                      type: string
                    desde:
                      type: string
                    hasta:
                      type: string
                    matricula:
                      type: string
                    data:
                      type: string
                    DNI:
                      type: string
                  example:
                    estacion: VG1
                    desde: "10:20"
                    hasta: "11:00"
                    matricula: "LKE2378"
                    data: "18-04-2022"
                    DNI: "1238712N"
          parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
          responses:
            #respuesta correcta
            '200':
              description: Reserva actualizada
              content:
                application/json:
                  examples:
                    Reserva actualizada:
                      value: >-
                          {
                            "succes": "True",
                            "plaza/cargador": 3
                          }

            '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Error al meter reserva:
                      value: >-
                        { "error": "Malformed request syntax."}
            '404':
              description: Not Found
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "Reserva not found."}
      #borrar reserva
      delete:
        summary: Elimina reserva por ID
        tags:
          - Reservas
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Eliminado delete
            content:
              application/json:
                examples:
                  Reservas:
                    value: "{\"msg\": \"Data deleted correctly.\"}"
                  Reserva no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Reserva not found."}

#########################################################################################

