openapi: 3.0.0
info:
  title: API portal de gestion
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000
    description: Development
  - url: http://127.0.0.1/api
    description: Development HTTP docker-compose
  - url: https://127.0.0.1/api
    description: Development HTTPS docker-compose
  - url: http://craaxkvm.epsevg.upc.es:23701/api
    description: Production HTTP
  - url: https://craaxkvm.epsevg.upc.es:23700/api
    description: Production HTTPS
paths:
  # reservas
  /reservas:
    get:
      summary: Obtiene todas las reservas de todos los clientes (no me uses)
      tags:
        - Reservas
      responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter reserva:
                    value:  >-
                        [
                          {
                            "fecha_entrada": "2022-04-18T11:00:00",
                            "fecha_salida": "2022-04-18T18:00:00",
                            "id_cargador": 1,
                            "id_cliente": "1238712N",
                            "id_reserva": 1,
                            "id_vehiculo": "LKE2378"
                          }
                        ]
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter reserva:
                    value: >-
                      {"error": "Malformed request syntax."}
                      
    # mandamos/resolvemos 1 reserva]
    post:
      summary: Inserta una nueva reserva
      tags:
      - Reservas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - id_estacion
                  - fecha_inicio
                  - fecha_final
                  - id_vehiculo
                  - id_cliente
              properties:
                id_estacion:
                  type: integer
                fecha_inicio:
                  type: string
                fecha_final:
                  type: string
                id_vehiculo:
                  type: string
                id_cliente:
                  type: string
              example:
                id_estacion: 1
                fecha_inicio: "18-04-2022 11:00"
                fecha_final: "18-04-2022 18:00"
                id_vehiculo: "LKE2378"
                id_cliente: "1238712N"
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Meter reserva:
                  value:  >-
                      {
                        "id_cliente": "1238712N",
                        "fecha_entrada": "2022-04-18T18:00:00",
                        "fecha_salida": "2022-04-18T11:00:00",
                        "id_reserva": 1,
                        "id_estacion": 1,
                        "id_vehiculo": "LKE2378",
                        "id_cargador": 2
                      }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                Error al meter reserva:
                  value: >-
                    {"error": "Malformed request syntax."}
  /reservas/estacion/{id_estacion}:
    # pedimos una lista de reservas por una estacion dada
    get:
      summary: Obtiene una lista de reservas para una estacion dada obtiene solo las reservas desde ahora al futuro
      tags:
      - Reservas
      parameters:
        - in: path
          name: id_estacion
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Obtiene un lista de reservas por estacion desde la fecha actual al futuro
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "fecha_entrada": "2022-07-18T11:00:00",
                            "fecha_salida": "2022-07-18T18:00:00",
                            "id_cargador": 1,
                            "id_cliente": "1238712N",
                            "id_reserva": 1,
                            "id_vehiculo": "LKE2378"
                          },
                          {
                            "fecha_entrada": "2022-07-18T12:00:00",
                            "fecha_salida": "2022-07-18T115:00:00",
                            "id_cargador": 2,
                            "id_cliente": "1238712N",
                            "id_reserva": 2,
                            "id_vehiculo": "LKE2378"
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/bydni/{dni}:
    # pedimos una lista de reservas por un dni dado
    get:
      summary: Obtiene una lista de reservas para un dni dado
      tags:
      - Reservas
      parameters:
        - in: path
          name: dni
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "fecha_entrada": "2022-07-18T11:00:00",
                            "fecha_salida": "2022-07-18T18:00:00",
                            "id_cargador": 1,
                            "id_cliente": "1238712N",
                            "id_reserva": 1,
                            "id_vehiculo": "LKE2378"
                          },
                          {
                            "fecha_entrada": "2022-07-18T12:00:00",
                            "fecha_salida": "2022-07-18T115:00:00",
                            "id_cargador": 2,
                            "id_cliente": "1238712N",
                            "id_reserva": 2,
                            "id_vehiculo": "LKE2378"
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/bymatricula/{matricula}:
    # pedimos una lista de reservas por una matriculÃ±a dada
    get:
      summary: Obtiene una lista de reservas para una matricula dada
      tags:
      - Reservas
      parameters:
        - in: path
          name: matricula
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "fecha_entrada": "2022-07-18T11:00:00",
                            "fecha_salida": "2022-07-18T18:00:00",
                            "id_cargador": 1,
                            "id_cliente": "1238712N",
                            "id_reserva": 1,
                            "id_vehiculo": "LKE2378"
                          },
                          {
                            "fecha_entrada": "2022-07-18T12:00:00",
                            "fecha_salida": "2022-07-18T115:00:00",
                            "id_cargador": 2,
                            "id_cliente": "1238712N",
                            "id_reserva": 2,
                            "id_vehiculo": "LKE2378"
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/{id}:
      # pedimos una reserva, dado su id
      get:
        summary: Obtiene una reserva por un id dado
        tags:
          - Reservas
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Default error sample response
            content:
              application/json:
                examples:
                  Reservas:
                    value:  >-
                        {
                          "fecha_entrada": "2022-04-18T11:00:00",
                          "fecha_salida": "2022-04-18T18:00:00",
                          "id_cargador": 1,
                          "id_cliente": "1238712N",
                          "id_reserva": 1,
                          "id_vehiculo": "LKE2378"
                        }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "Reserva not found."}
      #borrar reserva
      delete:
        summary: Elimina reserva por ID
        tags:
          - Reservas
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Eliminado delete
            content:
              application/json:
                examples:
                  Reservas:
                    value: {"msg": "Data deleted correctly."}
                  Reserva no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Reserva not found."}
#########################################################################################


  /estaciones:
      # pedimos una lista de las estaciones
      get:
        summary: Obtiene una lista de estaciones
        tags:
        - Estaciones
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Con estaciones:
                    value: >-
                      [
                          {
                            "capacidad": 32,
                            "ciudad": "EspaÃ±a",
                            "direccion": "mi casa",
                            "id_estacion": 1,
                            "latitud": 59.26258315325391,
                            "longitud": 82.104931574632,
                            "nombre_est": "VG0",
                            "ocupacion_actual": 9,
                            "pais": "Vilanova",
                            "potencia_contratada": 309,
                            "potencia_usada": 226,
                            "telefono": "690389157",
                            "zona": 5
                          },
                          {
                            "capacidad": 32,
                            "ciudad": "EspaÃ±a",
                            "direccion": "mi casa",
                            "id_estacion": 2,
                            "latitud": 57.77617625032384,
                            "longitud": 12.35933821353951,
                            "nombre_est": "VG1",
                            "ocupacion_actual": 6,
                            "pais": "Vilanova",
                            "potencia_contratada": 431,
                            "potencia_usada": 95,
                            "telefono": "690389157",
                            "zona": 1
                          }
                      ]
                  Sin estaciones:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
  /estaciones/{id}:
      get:
        summary: Obtiene informacion de una estacion y sus surtidores
        tags:
        - Estaciones
        parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  estacion:
                    value: >-
                          {
                            "capacidad": 32,
                            "cargadores": [
                              {
                                "estado": "True",
                                "id_cargador": 1,
                                "posicion": 32
                              },
                              {
                                "estado": "False",
                                "id_cargador": 2,
                                "posicion": 31
                              },
                              {
                                "estado": "False",
                                "id_cargador": 3,
                                "posicion": 12
                              },
                              {
                                "estado": "False",
                                "id_cargador": 4,
                                "posicion": 13
                              }
                            ],
                            "ciudad": "EspaÃ±a",
                            "direccion": "mi casa",
                            "id_estacion": 1,
                            "latitud": 12,
                            "longitud": 13,
                            "nombre_est": "VG30",
                            "ocupacion_actual": 23,
                            "pais": "Vilanova",
                            "potencia_contratada": 720,
                            "potencia_usada": 130,
                            "telefono": "690389157",
                            "zona": 3
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Station not found."}
#borrar incidencia
  /estaciones/coor/{lat}/{long}:
      get:
        summary: Obtiene las estaciones mÃ¡s cercanas por las coordenadas que se le pasen en la URI
        tags:
        - Estaciones
        parameters:
        - in: path
          name: lat
          required: true
          schema:
            type: number
        - in: path
          name: long
          required: true
          schema:
            type: number
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  estacion:
                    value: >-
                        {
                          "Estaciones": [
                            {
                              "capacidad": 32,
                                "cargadores": [
                                  {
                                    "estado": "True",
                                    "id_cargador": 1,
                                    "posicion": 32
                                  },
                                  {
                                    "estado": "False",
                                    "id_cargador": 2,
                                    "posicion": 31
                                  },
                                  {
                                    "estado": "False",
                                    "id_cargador": 3,
                                    "posicion": 12
                                  },
                                  {
                                    "estado": "False",
                                    "id_cargador": 4,
                                    "posicion": 13
                                  }
                                ],
                              "ciudad": "EspaÃ±a",
                              "direccion": "mi casa",
                              "id_estacion": 1,
                              "latitud": 12,
                              "longitud": 13,
                              "nombre_est": "VG30",
                              "ocupacion_actual": 23,
                              "pais": "Vilanova",
                              "potencia_contratada": 720,
                              "potencia_usada": 130,
                              "telefono": "690389157",
                              "zona": 3
                            },
                            {
                              "capacidad": 32,
                              "cargadores": [],
                              "ciudad": "EspaÃ±a",
                              "direccion": "mi casa",
                              "id_estacion": 30,
                              "latitud": 15.333991225795597,
                              "longitud": 20.112191933383876,
                              "nombre_est": "VG28",
                              "ocupacion_actual": 19,
                              "pais": "Vilanova",
                              "potencia_contratada": 496,
                              "potencia_usada": 455,
                              "telefono": "690389157",
                              "zona": 2
                            },
                            {
                              "capacidad": 32,
                              "cargadores": [],
                              "ciudad": "EspaÃ±a",
                              "direccion": "mi casa",
                              "id_estacion": 8,
                              "latitud": 10.310335286671437,
                              "longitud": 23.36392378582253,
                              "nombre_est": "VG6",
                              "ocupacion_actual": 1,
                              "pais": "Vilanova",
                              "potencia_contratada": 643,
                              "potencia_usada": 238,
                              "telefono": "690389157",
                              "zona": 4
                            },
                            {
                              "capacidad": 32,
                              "cargadores": [],
                              "ciudad": "EspaÃ±a",
                              "direccion": "mi casa",
                              "id_estacion": 12,
                              "latitud": 15.622761909852207,
                              "longitud": 27.34148410638893,
                              "nombre_est": "VG10",
                              "ocupacion_actual": 8,
                              "pais": "Vilanova",
                              "potencia_contratada": 821,
                              "potencia_usada": 252,
                              "telefono": "690389157",
                              "zona": 4
                            },
                            {
                              "capacidad": 32,
                              "cargadores": [],
                              "ciudad": "EspaÃ±a",
                              "direccion": "mi casa",
                              "id_estacion": 23,
                              "latitud": 3.6752802128221025,
                              "longitud": 31.098887261123572,
                              "nombre_est": "VG21",
                              "ocupacion_actual": 15,
                              "pais": "Vilanova",
                              "potencia_contratada": 503,
                              "potencia_usada": 204,
                              "telefono": "690389157",
                              "zona": 4
                            }
                          ]
                        }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Station not found."}
#########################################################################################
# clientes
  /clientes:
    # pedimos una lista de las incidencias
    get:
      summary: Obtiene una lista de clientes
      tags:
      - Clientes
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con clientes:
                  value: [
                          {
                            "apellido": "Roca",
                            "dni": "1234G",
                            "email": "pere.roca@boss.com",
                            "foto": "DueÃ±o",
                            "id_usuari": 1,
                            "nombre": "Pere",
                            "password": "hola",
                            "telefono": 622554433,
                            "username": "pr"
                          },
                          {
                            "apellido": "Gamero",
                            "dni": "1235G",
                            "email": "raul.gamero@boss.com",
                            "foto": "Cliente",
                            "id_usuari": 2,
                            "nombre": "Raul",
                            "password": "hola",
                            "telefono": 622554433,
                            "username": "rg"
                          }
                        ]

                Sin clientes:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
    post:
        summary: Inserta un nuevo cliente
        tags:
        - Clientes
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - nombre
                    - apellido
                    - email
                    - DNI
                    - foto
                    - telefono
                    - username
                    - password
                  properties:
                    nombre:
                      type: string
                    apellido:
                      type: string
                    email:
                      type: string
                    DNI:
                      type: string
                    foto:
                      type: string
                    telefono:
                      type: string
                    username:
                      type: string
                    password:
                      type: string
                    #profileImage:
                    #  type: string
                    #  format: binary

                  example:
                    nombre: "Pere"
                    apellido: "Roca"
                    email: "pere.roca@boss.com"
                    DNI: "1234G"
                    foto: "DueÃ±o"
                    telefono: "622554433"
                    username: "pr"
                    password: "hola"
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter cliente:
                    value: [
                      {
                        "apellido": "Roca",
                        "dni": "1234G",
                        "email": "pere.roca@boss.com",
                        "foto": "DueÃ±o",
                        "id_usuari": 1,
                        "nombre": "Pere",
                        "password": "hola",
                        "telefono": 622554433,
                        "username": "pr"
                      }
                      ]
          '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Error al meter incidencia:
                      value: {"error": "Malformed request syntax."}

          '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "User not authorized."}
  /clientes/profile/{DNI}:
    # pedimos un cliente dado su id
    get:
      summary: Obtiene un cliente dado su DNI
      tags:
        - Clientes
      parameters:
        - in: path
          name: DNI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default error sample response
          content:
            application/json:
              examples:
                Cliente encontrado:
                  value:
                      [
                        {
                          "apellido": "Roca",
                          "dni": "1234G",
                          "email": "pere.roca@boss.com",
                          "foto": "DueÃ±o",
                          "id_usuari": 1,
                          "nombre": "Pere",
                          "password": "hola",
                          "telefono": 622554433,
                          "username": "pr"
                        }
                      ]
                Cliente no encontrado:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "User not authenticated."}
        '404':
          description: Not found
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "User not found."}
    # modificar cliente de la lista de clientes
    put:
        summary: Modifica un trabajador
        tags:
          - Clientes
        parameters:
        - in: path
          name: DNI
          required: true
          schema:
            type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                  type: object
                  required:
                    - nombre
                    - apellido
                    - email
                    - foto
                    - telefono
                  properties:
                    nombre:
                      type: string
                    apellido:
                      type: string
                    email:
                      type: string
                    foto:
                      type: string
                    telefono:
                      type: string
                    #profileImage:
                    #  type: string
                    #  format: binary
                  example:
                    nombre: "Raul"
                    apellido: "Gamero"
                    email: "raul.gamero@boss.com"
                    foto: "noob.png"
                    telefono: "622554433"
                    
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajador actualizado:
                    value: >-
                        {
                          "apellido": "Roca",
                          "dni": "1234G",
                          "email": "pere.roca@boss.com",
                          "foto": "DueÃ±o",
                          "id_usuari": 1,
                          "nombre": "Pere",
                          "password": "hola",
                          "telefono": 622554433,
                          "username": "pr"
                        }
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter cliente:
                    value: {"error": "Malformed request syntax."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: {"error": "User not found."}
  
  #borrar cliente
  
    delete:
      summary: Elimina cliente por id
      tags:
        - Clientes
      parameters:
        - in: path
          name: DNI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente eliminado delete
          content:
            application/json:
              examples:
                Incidencias:
                  value: {"msg": "Client deleted correctly."}
                Incidencia no encontrada:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "Client not found."}
                    
  /clientes/profile/{DNI}/reservas:
      # pedimos reservas clientes dado su DNI
      get:
        summary: Obtiene reservas clientes dado su DNI
        tags:
          - Clientes
        parameters:
          - in: path
            name: DNI
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Default error sample response
            content:
              application/json:
                examples:
                  Cliente encontrado:
                    value:
                        [
                          {
                            "fecha_entrada": "2022-04-18T11:00:00",
                            "fecha_salida": "2022-04-18T18:00:00",
                            "id_cargador": 1,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "LKE2378"
                          }
                        ]
                  Cliente no encontrado:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not found."}
  /clientes/change_password/{DNI}:
    # modificar contraseÃ±a cliente
    put:
        summary: Modifica un trabajador
        tags:
          - Clientes
        parameters:
        - in: path
          name: DNI
          required: true
          schema:
            type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                  type: object
                  required:
                    - actual_password
                    - new_password
                  properties:
                    actual_password:
                      type: string
                    new_password:
                      type: string
                  example:
                    actual_password: "hola"
                    new_password: "admin"
                    
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajador actualizado:
                    value: {"msg": "Password changed succesfully."}
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter cliente:
                    value: {"error": "Malformed request syntax."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: {"error": "User not found."}
#######################################################################################################

