openapi: 3.0.0
info:
  title: API portal de gestion
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000/api
    description: Development
  - url: http://127.0.0.1/api
    description: Development HTTP docker-compose
  - url: https://127.0.0.1/api
    description: Development HTTPS docker-compose
  - url: http://craaxkvm.epsevg.upc.es:23701/api
    description: Production HTTP
  - url: https://craaxkvm.epsevg.upc.es:23700/api
    description: Production HTTPS
paths:
  # reservas
  # reservas
  /reservas:
    get:
      summary: Obtiene todas las reservas de todos los clientes (no me uses)
      tags:
        - Reservas
      responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter reserva:
                    value:  >-
                        [
                          {
                            "asistida": true,
                            "estado": true,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.798066",
                            "fecha_salida": "2022-05-23T13:49:59.798066",
                            "id_cargador": 257,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 10.1,
                            "precio_carga_completa": 25.2,
                            "procetnaje_carga": 50,
                            "tarifa": 90.99
                          },
                          {
                            "asistida": true,
                            "estado": false,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.808033",
                            "fecha_salida": "2022-05-23T13:49:59.808033",
                            "id_cargador": 258,
                            "id_cliente": 1,
                            "id_reserva": 2,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 60,
                            "precio_carga_completa": 50,
                            "procetnaje_carga": 33,
                            "tarifa": 44.44
                          }
                        ]
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter reserva:
                    value: >-
                      {"error": "Malformed request syntax."}
                      
    # mandamos/resolvemos 1 reserva]
    post:
      summary: Inserta una nueva reserva
      tags:
      - Reservas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - id_estacion
                  - fecha_inicio
                  - fecha_final
                  - id_vehiculo
                  - id_cliente
                  - tarifa
                  - asistida
                  - porcentaje_carga
                  - precio_carga_completo
                  - precio_carga_actual
                  - estado_pago
              properties:
                id_estacion:
                  type: string
                fecha_inicio:
                  type: string
                fecha_final:
                  type: string
                id_vehiculo:
                  type: string
                id_cliente:
                  type: string
                tarifa:
                  type: number
                asistida:
                  type: boolean
                porcentaje_carga:
                  type: number
                precio_carga_completo:
                  type: number
                precio_carga_actual:
                  type: number
                estado_pago:
                  type: boolean
              example:
                id_estacion: "VG1"
                fecha_inicio: "20-06-2022 11:00"
                fecha_final: "20-06-2022 18:00"
                id_vehiculo: "655RR68"
                tarifa: 12.7
                asistida: True
                porcentaje_carga: 30
                precio_carga_completo: 30
                precio_carga_actual: 5
                estado_pago: True
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Meter reserva:
                  value:  >-
                      {
                        "asistida": true,
                        "estado": true,
                        "estado_pago": true,
                        "fecha_entrada": "2022-05-23T13:49:59.798066",
                        "fecha_salida": "2022-05-23T13:49:59.798066",
                        "id_cargador": 257,
                        "id_cliente": 1,
                        "id_reserva": 1,
                        "id_vehiculo": "2WRQ7QQ",
                        "precio_carga_actual": 10.1,
                        "precio_carga_completa": 25.2,
                        "procetnaje_carga": 50,
                        "tarifa": 90.99
                      }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                Error al meter reserva:
                  value: >-
                    {"error": "Malformed request syntax."}
  /reservas/estacion/{id_estacion}:
    # pedimos una lista de reservas por una estacion dada
    get:
      summary: Obtiene una lista de reservas para una estacion dada obtiene solo las reservas desde ahora al futuro
      tags:
      - Reservas
      parameters:
        - in: path
          name: id_estacion
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas por estacion desde la fecha actual al futuro
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "asistida": true,
                            "estado": true,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.798066",
                            "fecha_salida": "2022-05-23T13:49:59.798066",
                            "id_cargador": 257,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 10.1,
                            "precio_carga_completa": 25.2,
                            "procetnaje_carga": 50,
                            "tarifa": 90.99
                          },
                          {
                            "asistida": true,
                            "estado": false,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.808033",
                            "fecha_salida": "2022-05-23T13:49:59.808033",
                            "id_cargador": 258,
                            "id_cliente": 1,
                            "id_reserva": 2,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 60,
                            "precio_carga_completa": 50,
                            "procetnaje_carga": 33,
                            "tarifa": 44.44
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/bydni/{dni}:
    # pedimos una lista de reservas por un dni dado
    get:
      summary: Obtiene una lista de reservas para un dni dado
      tags:
      - Reservas
      parameters:
        - in: path
          name: dni
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                      [
                        {
                          "asistida": true,
                          "estado": true,
                          "estado_pago": true,
                          "fecha_entrada": "2022-05-23T13:49:59.798066",
                          "fecha_salida": "2022-05-23T13:49:59.798066",
                          "id_cargador": 257,
                          "id_cliente": 1,
                          "id_reserva": 1,
                          "id_vehiculo": "2WRQ7QQ",
                          "precio_carga_actual": 10.1,
                          "precio_carga_completa": 25.2,
                          "procetnaje_carga": 50,
                          "tarifa": 90.99
                        },
                        {
                          "asistida": true,
                          "estado": false,
                          "estado_pago": true,
                          "fecha_entrada": "2022-05-23T13:49:59.808033",
                          "fecha_salida": "2022-05-23T13:49:59.808033",
                          "id_cargador": 258,
                          "id_cliente": 1,
                          "id_reserva": 2,
                          "id_vehiculo": "2WRQ7QQ",
                          "precio_carga_actual": 60,
                          "precio_carga_completa": 50,
                          "procetnaje_carga": 33,
                          "tarifa": 44.44
                        }
                      ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/bymatricula/{matricula}:
    # pedimos una lista de reservas por una matriculña dada
    get:
      summary: Obtiene una lista de reservas para una matricula dada
      tags:
      - Reservas
      parameters:
        - in: path
          name: matricula
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtiene un lista de reservas
          content:
            application/json:
              examples:
                Con reservas:
                  value: >-
                        [
                          {
                            "asistida": true,
                            "estado": true,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.798066",
                            "fecha_salida": "2022-05-23T13:49:59.798066",
                            "id_cargador": 257,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 10.1,
                            "precio_carga_completa": 25.2,
                            "procetnaje_carga": 50,
                            "tarifa": 90.99
                          },
                          {
                            "asistida": true,
                            "estado": false,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.808033",
                            "fecha_salida": "2022-05-23T13:49:59.808033",
                            "id_cargador": 258,
                            "id_cliente": 1,
                            "id_reserva": 2,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 60,
                            "precio_carga_completa": 50,
                            "procetnaje_carga": 33,
                            "tarifa": 44.44
                          }
                        ]
                Sin reservas:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
  /reservas/{id}:
      # pedimos una reserva, dado su id
      get:
        summary: Obtiene una reserva por un id dado
        tags:
          - Reservas
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Default error sample response
            content:
              application/json:
                examples:
                  Reservas:
                    value:  >-
                          {
                            "asistida": true,
                            "estado": true,
                            "estado_pago": true,
                            "fecha_entrada": "2022-05-23T13:49:59.798066",
                            "fecha_salida": "2022-05-23T13:49:59.798066",
                            "id_cargador": 257,
                            "id_cliente": 1,
                            "id_reserva": 1,
                            "id_vehiculo": "2WRQ7QQ",
                            "precio_carga_actual": 10.1,
                            "precio_carga_completa": 25.2,
                            "procetnaje_carga": 50,
                            "tarifa": 90.99
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "Reserva not found."}
      #borrar reserva
      delete:
        summary: Elimina reserva por ID
        tags:
          - Reservas
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Eliminado delete
            content:
              application/json:
                examples:
                  Reservas:
                    value: {"msg": "Data deleted correctly."}
                  Reserva no encontrada:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Reserva not found."
#########################################################################################


  /estaciones:
      # pedimos una lista de las estaciones
      get:
        summary: Obtiene una lista de estaciones
        tags:
        - Estaciones
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Con estaciones:
                    value: >-
                      [
                        {
                          "capacidad": 32,
                          "ciudad": "Vilanova i la geltru",
                          "direccion": "Rambla de L'exposicio",
                          "id_estacion": 1,
                          "latitud": 41,
                          "longitud": 1,
                          "nombre_est": "VG1",
                          "ocupation_actual": 1,
                          "pais": "España",
                          "potencia_contratada": 20,
                          "potencia_usada": 130,
                          "telefono": "+34762487248",
                          "zona": "Zona industrial"
                        },
                        {
                          "capacidad": 32,
                          "ciudad": "Vilanova i la geltru",
                          "direccion": "Rambla de A",
                          "id_estacion": 2,
                          "latitud": 41,
                          "longitud": 1,
                          "nombre_est": "VG2",
                          "ocupation_actual": 15,
                          "pais": "España",
                          "potencia_contratada": 20,
                          "potencia_usada": 130,
                          "telefono": "+34762854712",
                          "zona": "Zona mayonesa"
                        },
                        {
                          "capacidad": 32,
                          "ciudad": "Vilanova i la geltru",
                          "direccion": "A veces",
                          "id_estacion": 3,
                          "latitud": 41,
                          "longitud": 1,
                          "nombre_est": "VG3",
                          "ocupation_actual": 8,
                          "pais": "España",
                          "potencia_contratada": 20,
                          "potencia_usada": 130,
                          "telefono": "+34785123478",
                          "zona": "Zona M de motomami"
                        },
                        {
                          "capacidad": 32,
                          "ciudad": "Vilanova i la geltru",
                          "direccion": "Rambla de Shrek",
                          "id_estacion": 4,
                          "latitud": 41,
                          "longitud": 1,
                          "nombre_est": "VG4",
                          "ocupation_actual": 1,
                          "pais": "España",
                          "potencia_contratada": 20,
                          "potencia_usada": 130,
                          "telefono": "+34745821523",
                          "zona": "Zona memes de baki"
                        },
                        {
                          "capacidad": 32,
                          "ciudad": "Vilanova i la geltru",
                          "direccion": "Casoplon del coletas",
                          "id_estacion": 5,
                          "latitud": 41,
                          "longitud": 1,
                          "nombre_est": "VG5",
                          "ocupation_actual": 14,
                          "pais": "España",
                          "potencia_contratada": 20,
                          "potencia_usada": 130,
                          "telefono": "+34797458744",
                          "zona": "Zona SEAX"
                        },
                        {
                          "capacidad": 32,
                          "ciudad": "Vilanova i la geltru",
                          "direccion": "Casa de ibai",
                          "id_estacion": 6,
                          "latitud": 41,
                          "longitud": 1,
                          "nombre_est": "VG6",
                          "ocupation_actual": 20,
                          "pais": "España",
                          "potencia_contratada": 20,
                          "potencia_usada": 130,
                          "telefono": "+34768220011",
                          "zona": "Zona el bicho"
                        }
                      ]
                  Sin estaciones:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "User not authenticated."}
  /estaciones/{id}:
      get:
        summary: Obtiene informacion de una estacion y sus surtidores, junto a su promocion activa
        tags:
        - Estaciones
        parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  estacion:
                    value: >-
                          {
                            "capacidad": 32,
                            "cargadores": [
                              {
                                "estado": "True",
                                "id_cargador": 1,
                                "posicion": 32
                              },
                              {
                                "estado": "False",
                                "id_cargador": 2,
                                "posicion": 31
                              },
                              {
                                "estado": "False",
                                "id_cargador": 3,
                                "posicion": 12
                              },
                              {
                                "estado": "False",
                                "id_cargador": 4,
                                "posicion": 13
                              }
                            ],
                            "Promoción activa": {
                              "cantidad_usados": 28,
                              "descripcion": "CZM0MGO7GWYOVDM1BAWVXCJRG1DM41QK7EP3382S53BRMV22JK0Z125D89298JVDBG5KVEIOX8WSO5C1CU8JBIGHDKTBQ26FH5IXFBNUAICDYO3SH79ZTQI744MTMPYN6IY6AYVSQM5MOKNC8FJQGS5UK0MQ9P7ABFB1KQOIQ0Y7KANAL0YBWKMKPLLMBQQ6MW1YYY6Y3LA151NHKIJYR1HDV3Z38MWB7TJU1IH7E11QM7N8XKA42C17L9",
                              "descuento": 19,
                              "estado": true,
                              "fecha_fin": "2022-06-20T08:00:07",
                              "fecha_inicio": "2021-08-03T09:44:44",
                              "id_promo": 8
                            },
                            "ciudad": "España",
                            "direccion": "mi casa",
                            "id_estacion": 1,
                            "latitud": 12,
                            "longitud": 13,
                            "nombre_est": "VG30",
                            "ocupacion_actual": 23,
                            "pais": "Vilanova",
                            "potencia_contratada": 720,
                            "potencia_usada": 130,
                            "telefono": "690389157",
                            "zona": 3
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Station not found."}
#borrar incidencia
  /estaciones/coor/{lat}/{long}/{ratio}:
      get:
        summary: Obtiene las estaciones más cercanas por las coordenadas que se le pasen en la URI
        tags:
        - Estaciones
        parameters:
        - in: path
          name: lat
          required: true
          schema:
            type: number
        - in: path
          name: long
          required: true
          schema:
            type: number
        - in: path
          name: ratio
          required: true
          schema:
            type: integer
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  estacion:
                    value: >-
                        {
                          "Estaciones": [
                            {
                              "capacidad": 32,
                              "ciudad": "España",
                              "direccion": "mi casa",
                              "id_estacion": 1,
                              "latitud": 12,
                              "longitud": 13,
                              "nombre_est": "VG30",
                              "ocupacion_actual": 23,
                              "pais": "Vilanova",
                              "potencia_contratada": 720,
                              "potencia_usada": 130,
                              "telefono": "690389157",
                              "zona": 3
                            },
                            {
                              "capacidad": 32,
                              "cargadores": [],
                              "ciudad": "España",
                              "direccion": "mi casa",
                              "id_estacion": 30,
                              "latitud": 15.333991225795597,
                              "longitud": 20.112191933383876,
                              "nombre_est": "VG28",
                              "ocupacion_actual": 19,
                              "pais": "Vilanova",
                              "potencia_contratada": 496,
                              "potencia_usada": 455,
                              "telefono": "690389157",
                              "zona": 2
                            },
                            {
                              "capacidad": 32,
                              "cargadores": [],
                              "ciudad": "España",
                              "direccion": "mi casa",
                              "id_estacion": 8,
                              "latitud": 10.310335286671437,
                              "longitud": 23.36392378582253,
                              "nombre_est": "VG6",
                              "ocupacion_actual": 1,
                              "pais": "Vilanova",
                              "potencia_contratada": 643,
                              "potencia_usada": 238,
                              "telefono": "690389157",
                              "zona": 4
                            },
                            {
                              "capacidad": 32,
                              "cargadores": [],
                              "ciudad": "España",
                              "direccion": "mi casa",
                              "id_estacion": 12,
                              "latitud": 15.622761909852207,
                              "longitud": 27.34148410638893,
                              "nombre_est": "VG10",
                              "ocupacion_actual": 8,
                              "pais": "Vilanova",
                              "potencia_contratada": 821,
                              "potencia_usada": 252,
                              "telefono": "690389157",
                              "zona": 4
                            },
                            {
                              "capacidad": 32,
                              "cargadores": [],
                              "ciudad": "España",
                              "direccion": "mi casa",
                              "id_estacion": 23,
                              "latitud": 3.6752802128221025,
                              "longitud": 31.098887261123572,
                              "nombre_est": "VG21",
                              "ocupacion_actual": 15,
                              "pais": "Vilanova",
                              "potencia_contratada": 503,
                              "potencia_usada": 204,
                              "telefono": "690389157",
                              "zona": 4
                            }
                          ]
                        }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                      {"error": "Station not found."}
# clientes
  /clientes:
    # pedimos una lista de las incidencias
    get:
      summary: Obtiene una lista de clientes
      tags:
      - Clientes
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con clientes:
                  value: [
                          {
                            "id_cliente": 1,
                            # tipo ??????????
                            "nombre": "Pablo",
                            "apellido": "Escobar",
                            "email": "pablo@gmail.com",
                            "DNI": "23769543B",
                            "foto": "http://?????????/clientes/pablo.png",
                            "telefono": "643876101",
                            "username": "xXpabloXx",
                          },
                          {
                            "id_cliente": 2,
                            # tipo ??????????
                            "nombre": "Javier",
                            "apellido": "Sanchez",
                            "email": "javi@gmail.com",
                            "DNI": "23769612h",
                            "foto": "http://?????????/clientes/javi.png",
                            "telefono": "643876101",
                            "username": "xXpabloXx",
                          }
                        ]

                Sin clientes:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
    post:
        summary: Inserta un nuevo cliente
        tags:
        - Clientes
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - nombre
                    - apellido
                    - email
                    - DNI
                    - foto
                    - telefono
                    - username
                    - password
                  properties:
                    nombre:
                      type: string
                    apellido:
                      type: string
                    email:
                      type: string
                    DNI:
                      type: string
                    foto:
                      type: string
                    telefono:
                      type: integer
                    username:
                      type: string
                    password:
                      type: string

                  example:
                    nombre: "Pere"
                    apellido: "Roca"
                    DNI: "123781N"
                    telefono: 622554433
                    email: "pere.roca@boss.com"
                    username: "perealoca"
                    password: "1"
                    foto: "a"
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Meter cliente:
                    value: [
                      {
                        "id_cliente": 1,
                        # tipo ??????????
                        "nombre": "Pablo",
                        "apellido": "Escobar",
                        "email": "pablo@gmail.com",
                        "DNI": "23769543B",
                        "foto": "http://?????????/clientes/pablo.png",
                        "telefono": "643876101",
                        "username": "xXpabloXx",
                      },
                      ]
          '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Error al meter incidencia:
                      value: {"error": "Malformed request syntax."}

          '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "User not authorized."}
  /clientes/{id}:
    # pedimos un cliente dado su id
    get:
      summary: Obtiene un cliente por un id dado
      tags:
        - Clientes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Default error sample response
          content:
            application/json:
              examples:
                Cliente encontrado:
                  value:
                      [
                        {
                          "id_cliente": 1,
                          # tipo ??????????
                          "nombre": "Pablo",
                          "apellido": "Escobar",
                          "email": "pablo@gmail.com",
                          "DNI": "23769543B",
                          "foto": "http://?????????/clientes/pablo.png",
                          "telefono": "643876101",
                          "username": "xXpabloXx",
                        },
                      ]
                Cliente no encontrado:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "User not authenticated."}
        '404':
          description: Not found
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "Client not found."}
  #borrar cliente
    delete:
      summary: Elimina cliente por id
      tags:
        - Clientes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cliente eliminado delete
          content:
            application/json:
              examples:
                Incidencias:
                  value: "{\"msg\": \"Client deleted correctly.\"}"
                Incidencia no encontrada:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "Client not found."}
                    
  /clientes/bydni/{DNI}:
    # pedimos un cliente dado su id
    get:
      summary: Obtiene un cliente dado su DNI
      tags:
        - Clientes
      parameters:
        - in: path
          name: DNI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default error sample response
          content:
            application/json:
              examples:
                Cliente encontrado:
                  value:
                      [
                        {
                          "id_cliente": 1,
                          # tipo ??????????
                          "nombre": "Pablo",
                          "apellido": "Escobar",
                          "email": "pablo@gmail.com",
                          "DNI": "23769543B",
                          "foto": "http://?????????/clientes/pablo.png",
                          "telefono": "643876101",
                          "username": "xXpabloXx",
                        }
                      ]
                Cliente no encontrado:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "User not authenticated."}
        '404':
          description: Not found
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "Client not found."}
  #borrar cliente
  
    delete:
      summary: Elimina cliente por id
      tags:
        - Clientes
      parameters:
        - in: path
          name: DNI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente eliminado delete
          content:
            application/json:
              examples:
                Incidencias:
                  value: "{\"msg\": \"Client deleted correctly.\"}"
                Incidencia no encontrada:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "User not authenticated."}
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: >-
                    {"error": "Client not found."}
#######################################################################################################`
#########################################################################################
  
  /soporte:
    get:
        summary: (NOT USE ME, ONLY FOR CHECKS) Obtiene una lista de peticiones que se han hecho al servicio técnico
        tags: 
        - Soporte tecnico
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Peticion a soporte:
                    value: {
                            "Mensajes": [
                            ],
                            "asunto": "App no me va",
                            "estado": En curso,
                            "fecha": "2022-05-26T16:52:37.020462",
                            "id_ticket": 1,
                            "mensaje": "Problema con la aplicación movil"
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  # Creacion de una ayuda o ticket al soporte tecnico
    post:
      summary: Publica una petición a soporte tecnico
      tags:
        - Soporte tecnico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - descripcion
                - estado
                - cliente
                - asunto
              properties:
                descripcion:
                  type: string
                asunto:
                  type: string
                cliente: 
                  type: integer
            example:
              asunto: "App no me va"
              descripcion: "Problema con la aplicación movil"
              
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar petición a soporte tecnico:
                  value: {
                            "Mensajes": [
                            ],
                            "asunto": "App no me va",
                            "estado": En curso,
                            "fecha": "2022-05-26T16:52:37.020462",
                            "id_ticket": 1,
                            "mensaje": "Problema con la aplicación movil"
                          }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Malformed request syntax."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
#Cogemos toda informacion sobre los tickes de un usuario que ha pedido ayuda al soporte tecnico
  /soporte/{ticket_id}:
    get:
      summary: Encontrar el ticket/la peticion de soporte del usuario
      tags:
        - Soporte tecnico
      parameters:
      - in: path
        name: ticket_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
               Consultando petición a soporte tecnico:
                  value: {
                          "Mensajes": [
                            {
                              "contenido": "aloha",
                              "date": "2022-05-26T16:52:40.062432",
                              "id_mensaje": 1
                            }
                          ],
                          "asunto": "App no me va",
                          "estado": En curso,
                          "fecha": "2022-05-26T16:52:37.020462",
                          "id_ticket": 1,
                          "mensaje": "Problema con la aplicación movil"
                        }
        '404':
          description: Ticket no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Ticket not found."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
    post:
      summary: El usuario en concreto pueda generar un mensaje para un ticket
      tags:
        - Soporte tecnico
      parameters:
      - in: path
        name: ticket_id
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
         application/json:
            schema:
              type: object
              required:
                - mensaje
              properties:
                mensaje:
                  type: string
              example:
                mensaje: "no se que me esta contando"
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar petición a soporte tecnico:
                  value: {
                          "Mensajes": [
                            {
                              "contenido": "aloha",
                              "date": "2022-05-26T16:52:40.062432",
                              "id_mensaje": 1
                            }
                          ],
                          "asunto": "App no me va",
                          "estado": En curso,
                          "fecha": "2022-05-26T16:52:37.020462",
                          "id_ticket": 1,
                          "mensaje": "Problema con la aplicación movil"
                        }
        '400':
          description: Ticket incorrecto
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Ticket not valid."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
        '404':
          description: Ticket no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Ticket not found."}'

  # Eliminacion del ticket o peticion al soporte tecnico
    delete:
      summary: Eliminar un ticket/una peticion del soporte del usuario
      tags:
        - Soporte tecnico
      parameters:
      - in: path
        name: ticket_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Ticket correcto
          content:
            application/json:
              examples:
                Eliminando una petición a soporte tecnico:
                  value: |-
                    {
                      "msg": "Ticket deleted succesfully."
                    }
        '400':
          description: Ticket incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Ticket not valid."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
        '404':
          description: Ticket no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error" : "Ticket not found."}'
        '410':
          description: Ticket ya eliminado
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Ticket have been deleted."}'
                  
  /soporte/byuser:
    get:
      summary: Obtiene los tickets que ha generado un usuario en el soporte
      tags: 
      - Soporte tecnico
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Trabajador:
                  value:  
                    {
                      "Tickets": [
                        {
                          "asunto": "App no me va",
                          "estado": En curso,
                          "fecha": "2022-05-26T16:52:37.020462",
                          "id_ticket": 1,
                          "mensaje": "Problema con la aplicación movil"
                        }
                      ],
                      "apellido": "garcia",
                      "dni": "245363Y",
                      "email": "meh@gmail.com",
                      "foto": "foto_chula",
                      "id_usuari": 1,
                      "nombre": "sergi",
                      "password": "mehmeh123",
                      "telefono": 4674387249,
                      "type": "cliente",
                      "username": "sergi.ib",
                      "vehiculos": []
                    }
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >- 
                    {"error": "User not authorized."}
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                error:
                  value: >- 
                    {"error": "User not found."}
                  
    
  /soporte/delete_missage/{ticket_id}/{msg_id}:
    delete:
      summary: Elimina un mensaje de una peticion
      tags:
        - Soporte tecnico
      parameters:
      - in: path
        name: ticket_id
        required: true
        schema: 
          type: integer
      - in: path
        name: msg_id
        required: true
        schema: 
          type: integer
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Eliminado mensaje:
                  value: |-
                    {
                      "msg": "Message deleted succesfully"
                    }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Message not valid"}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
        '404':
          description: Peticion no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error" : "Message not found."}'
        '410':
          description: Peticion ya eliminada
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Message have been deleted."}'

#########################################################################################
#########################################################################################
  
  /avisos:
    get:
        summary: (NOT USE ME, ONLY FOR CHECKS) Obtiene una lista de todos los avisos
        tags: 
        - Avisos
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Peticion a aviso:
                    value: {
                            "Mensajes": [
                            ],
                            "asunto": "App no me va",
                            "estado": En curso,
                            "fecha": "2022-05-26T16:52:37.020462",
                            "id_ticket": 1,
                            "mensaje": "Problema con la aplicación movil"
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
    post:
      summary: Publica un aviso dado una reserva 
      tags:
        - Avisos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_reserva
                - tipo
                - texto
              properties:
                id_reserva:
                  type: integer
                tipo:
                  type: string
                texto: 
                  type: integer
            example:
              id_reserva: 1
              tipo: "Bateria llena."
              texto: "Tiene la betería llena."
              
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar aviso:
                  value: {
                            "Mensajes": [
                            ],
                            "asunto": "App no me va",
                            "estado": En curso,
                            "fecha": "2022-05-26T16:52:37.020462",
                            "id_ticket": 1,
                            "mensaje": "Problema con la aplicación movil"
                          }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Malformed request syntax."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  /avisos/byuser:
    get:
      summary: Encontrar los avisos para el cliente (token)
      tags:
        - Avisos
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
               Consultando petición a aviso:
                  value: {
                          "Mensajes": [
                            {
                              "contenido": "aloha",
                              "date": "2022-05-26T16:52:40.062432",
                              "id_mensaje": 1
                            }
                          ],
                          "asunto": "App no me va",
                          "estado": En curso,
                          "fecha": "2022-05-26T16:52:37.020462",
                          "id_ticket": 1,
                          "mensaje": "Problema con la aplicación movil"
                        }
        '404':
          description: Aviso no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Aviso not exist or there is not any aviso for that reserva and user."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  /avisos/byreserva/{id_reserva}:
    get:
      summary: Encontrar los avisos dado una reserva
      tags:
        - Avisos
      parameters:
      - in: path
        name: id_reserva
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
               Consultando petición a aviso:
                  value: {
                          "Mensajes": [
                            {
                              "contenido": "aloha",
                              "date": "2022-05-26T16:52:40.062432",
                              "id_mensaje": 1
                            }
                          ],
                          "asunto": "App no me va",
                          "estado": En curso,
                          "fecha": "2022-05-26T16:52:37.020462",
                          "id_ticket": 1,
                          "mensaje": "Problema con la aplicación movil"
                        }
        '404':
          description: Aviso no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Aviso not exist or there is not any aviso for that reserva and user."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  /avisos/{id_aviso}:
    put:
      summary: Publica un aviso dado una reserva 
      tags:
        - Avisos
      parameters:
      - in: path
        name: id_aviso
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - estado
              properties:
                tipo:
                  type: string
            example:
              estado: "Leido"
              
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar aviso:
                  value: {
                            "Mensajes": [
                            ],
                            "asunto": "App no me va",
                            "estado": En curso,
                            "fecha": "2022-05-26T16:52:37.020462",
                            "id_ticket": 1,
                            "mensaje": "Problema con la aplicación movil"
                          }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Malformed request syntax."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
    delete:
      summary: Elimina un aviso
      tags:
        - Avisos
      parameters:
      - in: path
        name: id_aviso
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Aviso correcto
          content:
            application/json:
              examples:
                Eliminando una petición de Avisos:
                  value: |-
                    {
                      "msg": "Aviso deleted succesfully."
                    }
        '400':
          description: Aviso incorrecto
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Aviso not exist or aviso is not for the user"}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
        '404':
          description: Aviso no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error" : "Aviso not found."}'
        '410':
          description: Aviso ya eliminado
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Aviso have been deleted."}'

#######################################################################################################
# modelos
  /modelos:
    get:
      summary: Obtiene todos los modelos del sistema
      tags:
        - Modelos
      responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Con modelos:
                    value:
                          [
                            {
                              "modelo": "Celica",
                              "marca": "Toyota",
                              "potencia_carga": True,
                              "capacidad": "2",
                            },
                            {
                              "modelo": "Altea",
                              "marca": "Seat",
                              "potencia_carga": False,
                              "capacidad": "6",
                            }
                          ]
                  Sin modelos:
                    value: '[]'
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter reserva:
                    value: >-
                      {"error": "Malformed request syntax."}
    # añadimos un nuevo modelo
    post:
      summary: Inserta un nuevo modelo
      tags:
      - Modelos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - modelo
                  - marca
                  - potencia_carga
                  - capacidad
              properties:
                modelo:
                  type: string
                marca:
                  type: string
                potencia_carga:
                  type: boolean
                capacidad:
                  type: integer
              example:
                modelo: "Altea"
                marca: "Seat"
                potencia_carga: true
                capacidad: 6
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Meter modelo:
                  value:  >-
                      {
                        "modelo": "Celica",
                        "marca": "Toyota",
                        "potencia_carga": True,
                        "capacidad": "2",
                      }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                Error al meter modelo:
                  value: >-
                    {"error": "Malformed request syntax."}
#######################################################################################################
# vehiculos
  /vehiculos:
    get:
      summary: Obtiene todos los vehiculos de todos los clientes
      tags:
        - Vehiculos
      responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Con vehiculos:
                    value:
                          [
                            {
                              "matricula": "1111PRV",
                              "porcentaje_bat": 55,
                            },
                            {
                              "matricula": "1515PVR",
                              "porcentaje_bat": 10,
                            }
                          ]
                  Sin vehiculos:
                    value: '[]'
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Error al meter reserva:
                    value: >-
                      {"error": "Malformed request syntax."}
    # añadimos un nuevo vehiculo
    post:
      summary: Inserta un nuevo vehiculo
      tags:
      - Vehiculos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - matricula
                  - modelo
                  - porcentaje_bat
              properties:
                matricula:
                  type: string
                modelo:
                  type: string
                porcentaje_bat:
                  type: integer
              example:
                matricula: "6493CZL"
                modelo: "Golf"
                porcentaje_bat: 15
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Meter vehiculo:
                  value:  >-
                      {
                        "matricula": "1111PRV",
                        "id_cliente": "1"
                        "capacidad": "21321",
                        "marca": "Toyota",
                        "modelo": "Celica",
                        "potencia_carga": True,
                        "porcentaje_bat": 55,
                      }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                Error al meter vehiculo:
                  value: >-
                    {"error": "Malformed request syntax."}
  /vehiculos/{matricula}:
        # pedimos unvehiculo dada su matricula
        get:
          summary: Obtiene un vehiculo dada su matricula
          tags:
            - Vehiculos
          parameters:
            - in: path
              name: matricula
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Retorna el vehiculo correctamente
              content:
                application/json:
                  examples:
                    Vehiculo existe:
                      value:  >-
                          {
                            "matricula": "1515PVR",
                            "id_cliente": "2"
                            "capacidad": "21321",
                            "marca": "Nissan",
                            "modelo": "Skyline",
                            "potencia_carga": False,
                            "porcentaje_bat": 10,
                          }
                    Vehiculo no existe:
                      value: '[]'
            '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                          {"error": "User not authenticated."}
            '404':
              description: Not found
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                          {"error": "Vehicle not found."}
        # borramos vehiculo
        delete: 
          summary: Elimina vehiculo dada matricula
          tags:
            - Vehiculos
          parameters:
            - in: path
              name: matricula
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Eliminado vehiculo /delete
              content:
                application/json:
                  examples:
                    Vehiculo encontrado:
                      value: "{\"msg\": \"Data deleted correctly.\"}"
                    Vehiculo no encontrado:
                      value: '[]'
            '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "User not authenticated."}
            '404':
              description: Not Found
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                        {"error": "Vehiculo not found."}
          # editar un vehiculo
        put:
            summary: Modificar vehiculo
            tags:
            - Vehiculos
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    required:
                      - matricula
                    properties:
                      porcentaje_bat:
                        type: integer
                    example:
                      porcentaje_bat: 10
            parameters:
            - in: path
              name: matricula
              required: true
              schema:
                type: string
            responses:
              #respuesta correcta
              '200':
                description: Vehiculo actualizado
                content:
                  application/json:
                    examples:
                      Incidencia actualizada:
                        value: >-
                            {
                              "matricula": "1515PVR",
                              "porcentaje_bat": 10
                            }
              '400':
                description: Peticion incorrecta
                content:
                  application/json:
                    examples:
                      Error al modificar vehiculo:
                        value: >-
                          {"error": "Malformed request syntax."}
              '404':
                description: Not Found
                content:
                  application/json:
                    examples:
                      error:
                        value: >-
                          {"error": "vehiculo not found."}
  /vehiculos/cliente:
        # pedimos un vehiculo , dado su cliente
        get:
          summary: Obtiene un vehiculo dado el id cliente.
          tags:
            - Vehiculos
          responses:
            '200':
              description: Retorna el vehiculo correctamente
              content:
                application/json:
                  examples:
                    Vehiculo existe:
                      value:  >-
                          {
                            "matricula": "1515PVR",
                            "id_cliente": "2"
                            "capacidad": "21321",
                            "marca": "Nissan",
                            "modelo": "Skyline",
                            "potencia_carga": False,
                            "porcentaje_bat": 10,
                          }
                    Vehiculo no existe:
                      value: '[]'
            '401':
              description: Not login
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                          {"error": "User not authenticated."}
            '404':
              description: Not found
              content:
                application/json:
                  examples:
                    error:
                      value: >-
                          {"error": "Vehicle not found."}
                          
##########################################################################################
#########################################################################################
  
  /transacciones:
    get:
        summary: (NOT USE ME, ONLY FOR CHECKS) Obtiene una lista de todos las transacciones
        tags: 
        - Transacciones
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Peticion a transaccion:
                    value: {
                            "hola": "hola"
                          }
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  
  /transacciones/cliente/{id_reserva}:
    post:
      summary: Publica una transaccion dado una reserva 
      tags:
        - Transacciones
      parameters:
        - in: path
          name: id_reserva
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tipo
                - importe
              properties:
                tipo:
                  type: string
                importe: 
                  type: number
            example:
              tipo: "Pagado."
              importe: 12.7
              
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar transaccion:
                  value: {
                            "tipo": 12.7,
                            "importe": "Pagado",
                          }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Malformed request syntax."}'
        '404':
          description: Transaccion no encontrado
          content:
            application/json:
              examples:
                error:
                  value: '{"error": "Transaccion not exist or there is not any Transaccion for that user or reserva."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  /transacciones/cliente:
    get:
      summary: Obtener transacciones por un cliente
      tags:
        - Transacciones
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
               Consultando petición a transacciones:
                  value: {
                            "tipo": 12.7,
                            "importe": "Pagado",
                          }
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
  /saldo:
    get:
      summary: Obtiene el saldo por un cliente
      tags:
        - Transacciones
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
               Consultando petición a transacciones:
                  value: {
                            "saldo": 20
                          }
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}
    put:
      summary: Modifica el saldo del cliente
      tags:
        - Transacciones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - saldo
              properties:
                type:
                  type: string
                saldo: 
                  type: number
            example:
              type: "add/minus"
              saldo: 12.7
              
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar saldo:
                  value: {
                            "saldo": 20
                          }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: '{"error" :"Malformed request syntax."}'
        '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >- 
                      {"error": "User not authorized."}

##########################################################################################

  /promociones:
    # pedimos una lista de promociones
    get:
      summary: Obtiene una lista de promociones
      tags:
      - Promociones
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con promociones:
                  value: >-
                    [
                      {
                        "descripcion": "20% de descuento en la electrolinera de Vilanova!",
                        "descuento": 20,
                        "estado": true,
                        "fecha_inicio": "2022-04-18T11:00:00",
                        "fecha_fin": "2022-04-18T21:00:00",
                        "cantidad_usados": 500,
                        "id_promo": 1
                      },
                      {
                        "descripcion": "20% de descuento en la electrolinera de Barcelona!",
                        "descuento": 15,
                        "estado": false,
                        "fecha_inicio": "2022-04-18T17:00:00",
                        "fecha_fin": "2022-04-18T22:00:00",
                        "cantidad_usados": 500,
                        "id_promo": 2
                      },
                      {
                        "descripcion": "20% de descuento en la electrolinera de Sitges!",
                        "descuento": 25,
                        "estado": true,
                        "fecha_inicio": "2022-04-18T10:00:00",
                        "fecha_fin": "2022-04-18T19:00:00",
                        "cantidad_usados": 500,
                        "id_promo": 3
                      }
                    ]
                Sin promociones:
                  value: '[]'
    post:
      summary: Inserta un nueva promocion
      tags:
      - Promociones
      requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                required:
                  - descripcion
                  - descuento
                  - estado
                  - fecha_inicio
                  - fecha_fin
                properties:
                  descuento:
                    type: integer
                  fecha_inicio:
                    type: string
                  fecha_fin:
                    type: string
                  descripcion:
                    type: string
                  estado:
                    type: boolean
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Insertar nueva promocion:
                  value: >-
                    {
                      "descripcion": "20% de descuento en la electrolinera de Sitges!",
                      "descuento": 25,
                      "estado": true,
                      "fecha_inicio": "2022-04-18T10:00:00",
                      "fecha_fin": "2022-04-18T19:00:00",
                      "id_promo": 3
                    }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                Mala formada peticion:
                  value: {"error": "Malformed request syntax."}
        '403':
          description: Denied access
          content:
            application/json:
              examples:
                Usuario no autorizado:
                  value: {"error": "Denied access"}
  /promociones/{id_promocion}:
    # pedimos una reserva, dado su id
      get:
        summary: Obtiene una promocion en funcion de su id promocion
        tags:
          - Promociones
        parameters:
          - in: path
            name: id_promocion
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Devolvemos la promocion de su id correspodiente
            content:
              application/json:
                examples:
                  Promociones:
                    value:  >-
                      {"id_promo":1,"descuento":10,"cantidad_cupones":100,"cantidad_usados":20,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"Por la ignauracion de la electrolinera"}
          '400':
            description: Peticion incorrecta
            content:
              application/json:
                examples:
                  Mala formada peticion:
                    value: {"error": "Malformed request syntax."}
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  Usuario no auntenticado:
                    value: {"error": "User not authenticated."}
          '403':
            description: Acceso no autorizado
            content:
              application/json:
                examples:
                  Acceso denegado:
                    value: {"error": "Denied access"}
          '404':
            description: Not found
            content:
              application/json:
                examples:
                  Promocion no encontrado: 
                    value: {"error": "Promociones not found."}
      # modificar una promocion dado su id
      put:
        summary: Modifica una promocion
        tags:
          - Promociones
        parameters:
          - in: path
            name: id_promocion
            required: true
            schema:
              type: integer
        requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  estado:
                    type: boolean
                  descuento:
                    type: integer
                  fecha_inicio:
                    type: string
                  fecha_fin:
                    type: string
                  descripcion:
                    type: string
        responses:
          '200':
            description: Peticion correcta
            content:
              application/json:
                examples:
                  Trabajador actualizado:
                    value: >-
                        {
                          "descripcion": "20% de descuento en la electrolinera de Sitges!",
                          "descuento": 25,
                          "estado": true,
                          "fecha_inicio": "2022-04-18T10:00:00",
                          "fecha_fin": "2022-04-18T19:00:00",
                          "id_promo": 3
                        }
          '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Peticion mal formateada:
                      value: {"error": "Malformed request syntax."}
          '403':
              description: Denied access
              content:
                application/json:
                  examples:
                    Usuario no identificado:
                      value: {"error": "User not authenticated."}
          '404':
              description: Not Found
              content:
                application/json:
                  examples:
                    Promocion no encontrada:
                      value: {"error": "Promocion not found."}
      delete:
        summary: Eliminar una promcion dado su id
        tags:
          - Promociones
        parameters:
          - in: path
            name: id_promocion
            required: true
            schema:
              type: integer
        responses:
            '200':
              description: Peticion correcta
              content:
                application/json:
                  examples:
                    Promocion:
                      value: {"msg": "Promocion deleted succesfully"}
            '400':
              description: Peticion incorrecta
              content:
                application/json:
                  examples:
                    Peticion mal formateada:
                      value: {"error": "Malformed request syntax."}
            '403':
              description: Denied access
              content:
                application/json:
                  examples:
                    Usuario no identificado:
                      value: {"error": "User not authenticated."}
            '404':
              description: Not Found
              content:
                application/json:
                  examples:
                    error:
                      value: {"error": "Promocion not found."}
            '410':
              description: Peticion correcta
              content:
                application/json:
                  examples:
                    Promocion:
                      value: {"msg": "Promocion deleted succesfully"}
  /promociones/{estado}:
    # pedimos una lista de promociones dado su estado (activa/inactiva)
    get:
      summary: Obtiene información una lista de promociones de ese estado
      tags:
      - Promociones
      parameters:
      - in: path
        name: estado
        required: true
        schema:
          type: boolean
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Con promociones activas:
                  value: >-
                      [
                        {
                          "descripcion": "20% de descuento en la electrolinera de Vilanova!",
                          "descuento": 20,
                          "estado": true,
                          "fecha_inicio": "2022-04-18T11:00:00",
                          "fecha_fin": "2022-04-18T21:00:00",
                          "id_promo": 1
                        },
                        {
                          "descripcion": "20% de descuento en la electrolinera de Sitges!",
                          "descuento": 25,
                          "estado": true,
                          "fecha_inicio": "2022-04-18T10:00:00",
                          "fecha_fin": "2022-04-18T19:00:00",
                          "id_promo": 3
                        }
                      ]
                Sin promociones activas:
                  value: >-
                      [
                        {
                          "descripcion": "20% de descuento en la electrolinera de Barcelona!",
                          "descuento": 15,
                          "estado": false,
                          "fecha_inicio": "2022-04-18T17:00:00",
                          "fecha_fin": "2022-04-18T22:00:00",
                          "id_promo": 2
                        }
                      ]
                Sin promociones:
                  value: '[]'
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                Error al meter incidencia:
                  value: {"error": "Malformed request syntax."}
        '403':
          description: Denied access
          content:
            application/json:
              examples:
                Usuario no identificado:
                  value: {"error": "User not authenticated."}
  /promociones/estaciones:
    # pedimos una reserva, dado su id
      get:
        summary: Obtiene una lista de promociones en funcion de su id estaciones
        tags:
          - Promociones
        responses:
          '200':
            description: Por defecto sacamos una lista de promociones de cada estacion
            content:
              application/json:
                examples:
                  Promociones:
                    value:  >-
                      [{"id_estacion" : 2,"Nombre_est": "e-Barcelo","latitud" : "260º 23' 45''","longitud": "255º 23' 45''","capacidad": "64 plazas","direccion": "C/ Victor i Balaguer 5","potencia_contratada" : "6 Mwh","zona": "EB2","ocupacion_actual": "vacia","potencia_usada": "5.288 Mwh","telefono": "93555228866","ciudad": "Barcelona","pais": "España","promociones": [{"id_promo":1,"descuento":10,"cantidad_cupones":100,"cantidad_usados":20,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"Por la ignauracion de la electrolinera"},{"id_promo":2,"descuento":11,"cantidad_cupones":75,"cantidad_usados":2,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"La promocion se consigue mediante por sorteo"}]},{"id_estacion" : 1,"Nombre_est": "ElectroVilanova","latitud" : "233º 23' 45''","longitud": "233º 23' 45''","capacidad": "64 plazas","direccion": "C/ Victor i Balaguer 5","potencia_contratada" : "3 Mwh","zona": "VB1","ocupacion_actual": "alta","potencia_usada": "2.5 Mwh","telefono": "93555228866","ciudad": "Vilanova i la Geltru","pais": "España","promociones": [{"id_promo":1,"descuento":10,"cantidad_cupones":100,"cantidad_usados":20,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"Por la ignauracion de la electrolinera"},{"id_promo":2,"descuento":11,"cantidad_cupones":75,"cantidad_usados":2,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"La promocion se consigue mediante por sorteo"}]},{"id_estacion" : 3,"Nombre_est": "Electrolinera industrial Vilanova","latitud" : "233º 25' 59''","longitud": "233º 23' 45''","capacidad": "64 plazas","direccion": "Av./ Eduard Toldrà 5","potencia_contratada" : "3 Mwh","zona": "VB1","ocupacion_actual": "alta","potencia_usada": "2.5 Mwh","telefono": "93555228866","ciudad": "Vilanova i la Geltru","pais": "España","promociones": [{"id_promo":1,"descuento":10,"cantidad_cupones":100,"cantidad_usados":20,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"Por la ignauracion de la electrolinera"},{"id_promo":2,"descuento":11,"cantidad_cupones":75,"cantidad_usados":2,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"La promocion se consigue mediante por sorteo"}]}]
                  No_promociones:
                    value: '[]'
          '401':
            description: Not login
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "User not authenticated."}
          '404':
            description: Not found
            content:
              application/json:
                examples:
                  error:
                    value: >-
                        {"error": "Promociones not found."}
  /promociones/estaciones/{id_estacion}:
  # pedimos una reserva, dado su id
    get:
      summary: Obtiene una lista de promociones en funcion de su id estaciones
      tags:
        - Promociones
      parameters:
        - in: path
          name: id_estacion
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Por defecto sacamos una lista de promociones
          content:
            application/json:
              examples:
                Promociones:
                  value:  >-
                    {"id_estacion" : 1,"Nombre_est": "ElectroVilanova","latitud" : "233º 23' 45''","longitud": "233º 23' 45''","capacidad": "64 plazas","direccion": "C/ Victor i Balaguer 5","potencia_contratada" : "3 Mwh","zona": "VB1","ocupacion_actual": "alta","potencia_usada": "2.5 Mwh","telefono": "93555228866","ciudad": "Vilanova i la Geltru","pais": "España","promociones": [{"id_promo":1,"descuento":10,"cantidad_cupones":100,"cantidad_usados":20,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"Por la ignauracion de la electrolinera"},{"id_promo":2,"descuento":11,"cantidad_cupones":75,"cantidad_usados":2,"fecha_inicio":"2022-05-14","fecha_fin":"2022-06-18","estado":true,"descripcion":"La promocion se consigue mediante por sorteo"}]}
                No_promociones:
                  value: '[]'
        '401':
          description: Not login
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "User not authenticated."}
        '404':
          description: Not found
          content:
            application/json:
              examples:
                error:
                  value: >-
                      {"error": "Promociones not found."}

##########################################################################################
  /login:
    post:
      summary: Login en el sistema
      tags: 
      - Autenticacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string

              example:
                email: "prueba@gmail.com"
                password: "1"
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Success Login: 
                  value: >-
                    {
                      "token": "tokencito.jwt"
                    }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: {'error' : 'Invalid credendtials'}
  /logout:
    get:
      summary: "Log Out"
      tags:
      - Autenticacion
      responses:
        '200':
          description: Peticion correcta
          content:
            application/json:
              examples:
                Success Login: 
                  value: >-
                    {
                      "msg": "Success logout"
                    }
        '400':
          description: Peticion incorrecta
          content:
            application/json:
              examples:
                error:
                  value: {"error": "Something went wrong."}

components:
  securitySchemes:
    token:
      type: apiKey
      description: API key to authorize requests.
      name: x-access-tokens
      in: header
security:
  - token: [] 
